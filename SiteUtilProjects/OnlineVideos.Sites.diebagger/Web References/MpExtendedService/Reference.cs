//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 
#pragma warning disable 1591

namespace OnlineVideos.Sites.MpExtendedService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SoapEndpoint", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebObject))]
    public partial class MediaAccessService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetFileSystemFolderBasicByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileSystemFileBasicByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPathListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsLocalFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVEpisodesDetailedForTVShowByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVEpisodesBasicForSeasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVEpisodesDetailedForSeasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVEpisodeBasicByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVEpisodeDetailedByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTVShowCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTVShowGenresOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVShowGenresByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVShowGenresCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTVShowActorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVShowActorsByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVShowActorCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileSystemDriveCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllFileSystemDrivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileSystemDrivesByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllFileSystemFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileSystemFoldersByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllFileSystemFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileSystemFilesByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllFileSystemFilesAndFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileSystemFilesAndFoldersByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileSystemFilesAndFoldersCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileSystemFilesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileSystemFoldersCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileSystemDriveBasicByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPictureSubCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPicturesBasicByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPicturesDetailedByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVEpisodeCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVEpisodeCountForTVShowOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVEpisodeCountForSeasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVShowCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVSeasonCountForTVShowOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTVShowsBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTVShowsDetailedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVShowsBasicByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVShowsDetailedByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVShowBasicByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVShowDetailedByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVSeasonsBasicForTVShowOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVSeasonsDetailedForTVShowOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVSeasonBasicByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVSeasonDetailedByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTVEpisodesBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTVEpisodesDetailedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVEpisodesBasicByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVEpisodesDetailedByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVEpisodesBasicForTVShowOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVEpisodesDetailedForTVShowOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTVEpisodesBasicForTVShowByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMusicArtistsBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicArtistsBasicByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicArtistBasicByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMusicArtistsDetailedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicArtistsDetailedByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicArtistDetailedByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicTrackCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMusicTracksBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMusicTracksDetailedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicTracksBasicByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicTracksDetailedByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicTracksBasicForAlbumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicTracksDetailedForAlbumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicTrackBasicByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicTrackDetailedByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMusicGenresOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicGenresByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicGenresCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMusicCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPictureCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPicturesBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPicturesDetailedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPictureBasicByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPictureDetailedByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPictureCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediaItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchResultsByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExternalMediaInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMovieCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMoviesBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMoviesDetailedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMoviesBasicByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMoviesDetailedByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMovieBasicByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMovieDetailedByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMovieGenresOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMovieGenresByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMovieGenresCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMovieCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMovieActorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMovieActorsByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMovieActorCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicAlbumCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMusicAlbumsBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicAlbumsBasicByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicAlbumsBasicForArtistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicAlbumBasicByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMusicArtistCountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MediaAccessService() {
            this.Url = "http://10.1.0.248:4322/MPExtended/MediaAccessService/";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetFileSystemFolderBasicByIdCompletedEventHandler GetFileSystemFolderBasicByIdCompleted;
        
        /// <remarks/>
        public event GetFileSystemFileBasicByIdCompletedEventHandler GetFileSystemFileBasicByIdCompleted;
        
        /// <remarks/>
        public event GetPathListCompletedEventHandler GetPathListCompleted;
        
        /// <remarks/>
        public event GetFileInfoCompletedEventHandler GetFileInfoCompleted;
        
        /// <remarks/>
        public event IsLocalFileCompletedEventHandler IsLocalFileCompleted;
        
        /// <remarks/>
        public event RetrieveFileCompletedEventHandler RetrieveFileCompleted;
        
        /// <remarks/>
        public event GetTVEpisodesDetailedForTVShowByRangeCompletedEventHandler GetTVEpisodesDetailedForTVShowByRangeCompleted;
        
        /// <remarks/>
        public event GetTVEpisodesBasicForSeasonCompletedEventHandler GetTVEpisodesBasicForSeasonCompleted;
        
        /// <remarks/>
        public event GetTVEpisodesDetailedForSeasonCompletedEventHandler GetTVEpisodesDetailedForSeasonCompleted;
        
        /// <remarks/>
        public event GetTVEpisodeBasicByIdCompletedEventHandler GetTVEpisodeBasicByIdCompleted;
        
        /// <remarks/>
        public event GetTVEpisodeDetailedByIdCompletedEventHandler GetTVEpisodeDetailedByIdCompleted;
        
        /// <remarks/>
        public event GetAllTVShowCategoriesCompletedEventHandler GetAllTVShowCategoriesCompleted;
        
        /// <remarks/>
        public event GetAllTVShowGenresCompletedEventHandler GetAllTVShowGenresCompleted;
        
        /// <remarks/>
        public event GetTVShowGenresByRangeCompletedEventHandler GetTVShowGenresByRangeCompleted;
        
        /// <remarks/>
        public event GetTVShowGenresCountCompletedEventHandler GetTVShowGenresCountCompleted;
        
        /// <remarks/>
        public event GetAllTVShowActorsCompletedEventHandler GetAllTVShowActorsCompleted;
        
        /// <remarks/>
        public event GetTVShowActorsByRangeCompletedEventHandler GetTVShowActorsByRangeCompleted;
        
        /// <remarks/>
        public event GetTVShowActorCountCompletedEventHandler GetTVShowActorCountCompleted;
        
        /// <remarks/>
        public event GetFileSystemDriveCountCompletedEventHandler GetFileSystemDriveCountCompleted;
        
        /// <remarks/>
        public event GetAllFileSystemDrivesCompletedEventHandler GetAllFileSystemDrivesCompleted;
        
        /// <remarks/>
        public event GetFileSystemDrivesByRangeCompletedEventHandler GetFileSystemDrivesByRangeCompleted;
        
        /// <remarks/>
        public event GetAllFileSystemFoldersCompletedEventHandler GetAllFileSystemFoldersCompleted;
        
        /// <remarks/>
        public event GetFileSystemFoldersByRangeCompletedEventHandler GetFileSystemFoldersByRangeCompleted;
        
        /// <remarks/>
        public event GetAllFileSystemFilesCompletedEventHandler GetAllFileSystemFilesCompleted;
        
        /// <remarks/>
        public event GetFileSystemFilesByRangeCompletedEventHandler GetFileSystemFilesByRangeCompleted;
        
        /// <remarks/>
        public event GetAllFileSystemFilesAndFoldersCompletedEventHandler GetAllFileSystemFilesAndFoldersCompleted;
        
        /// <remarks/>
        public event GetFileSystemFilesAndFoldersByRangeCompletedEventHandler GetFileSystemFilesAndFoldersByRangeCompleted;
        
        /// <remarks/>
        public event GetFileSystemFilesAndFoldersCountCompletedEventHandler GetFileSystemFilesAndFoldersCountCompleted;
        
        /// <remarks/>
        public event GetFileSystemFilesCountCompletedEventHandler GetFileSystemFilesCountCompleted;
        
        /// <remarks/>
        public event GetFileSystemFoldersCountCompletedEventHandler GetFileSystemFoldersCountCompleted;
        
        /// <remarks/>
        public event GetFileSystemDriveBasicByIdCompletedEventHandler GetFileSystemDriveBasicByIdCompleted;
        
        /// <remarks/>
        public event GetPictureSubCategoriesCompletedEventHandler GetPictureSubCategoriesCompleted;
        
        /// <remarks/>
        public event GetPicturesBasicByCategoryCompletedEventHandler GetPicturesBasicByCategoryCompleted;
        
        /// <remarks/>
        public event GetPicturesDetailedByCategoryCompletedEventHandler GetPicturesDetailedByCategoryCompleted;
        
        /// <remarks/>
        public event GetTVEpisodeCountCompletedEventHandler GetTVEpisodeCountCompleted;
        
        /// <remarks/>
        public event GetTVEpisodeCountForTVShowCompletedEventHandler GetTVEpisodeCountForTVShowCompleted;
        
        /// <remarks/>
        public event GetTVEpisodeCountForSeasonCompletedEventHandler GetTVEpisodeCountForSeasonCompleted;
        
        /// <remarks/>
        public event GetTVShowCountCompletedEventHandler GetTVShowCountCompleted;
        
        /// <remarks/>
        public event GetTVSeasonCountForTVShowCompletedEventHandler GetTVSeasonCountForTVShowCompleted;
        
        /// <remarks/>
        public event GetAllTVShowsBasicCompletedEventHandler GetAllTVShowsBasicCompleted;
        
        /// <remarks/>
        public event GetAllTVShowsDetailedCompletedEventHandler GetAllTVShowsDetailedCompleted;
        
        /// <remarks/>
        public event GetTVShowsBasicByRangeCompletedEventHandler GetTVShowsBasicByRangeCompleted;
        
        /// <remarks/>
        public event GetTVShowsDetailedByRangeCompletedEventHandler GetTVShowsDetailedByRangeCompleted;
        
        /// <remarks/>
        public event GetTVShowBasicByIdCompletedEventHandler GetTVShowBasicByIdCompleted;
        
        /// <remarks/>
        public event GetTVShowDetailedByIdCompletedEventHandler GetTVShowDetailedByIdCompleted;
        
        /// <remarks/>
        public event GetTVSeasonsBasicForTVShowCompletedEventHandler GetTVSeasonsBasicForTVShowCompleted;
        
        /// <remarks/>
        public event GetTVSeasonsDetailedForTVShowCompletedEventHandler GetTVSeasonsDetailedForTVShowCompleted;
        
        /// <remarks/>
        public event GetTVSeasonBasicByIdCompletedEventHandler GetTVSeasonBasicByIdCompleted;
        
        /// <remarks/>
        public event GetTVSeasonDetailedByIdCompletedEventHandler GetTVSeasonDetailedByIdCompleted;
        
        /// <remarks/>
        public event GetAllTVEpisodesBasicCompletedEventHandler GetAllTVEpisodesBasicCompleted;
        
        /// <remarks/>
        public event GetAllTVEpisodesDetailedCompletedEventHandler GetAllTVEpisodesDetailedCompleted;
        
        /// <remarks/>
        public event GetTVEpisodesBasicByRangeCompletedEventHandler GetTVEpisodesBasicByRangeCompleted;
        
        /// <remarks/>
        public event GetTVEpisodesDetailedByRangeCompletedEventHandler GetTVEpisodesDetailedByRangeCompleted;
        
        /// <remarks/>
        public event GetTVEpisodesBasicForTVShowCompletedEventHandler GetTVEpisodesBasicForTVShowCompleted;
        
        /// <remarks/>
        public event GetTVEpisodesDetailedForTVShowCompletedEventHandler GetTVEpisodesDetailedForTVShowCompleted;
        
        /// <remarks/>
        public event GetTVEpisodesBasicForTVShowByRangeCompletedEventHandler GetTVEpisodesBasicForTVShowByRangeCompleted;
        
        /// <remarks/>
        public event GetAllMusicArtistsBasicCompletedEventHandler GetAllMusicArtistsBasicCompleted;
        
        /// <remarks/>
        public event GetMusicArtistsBasicByRangeCompletedEventHandler GetMusicArtistsBasicByRangeCompleted;
        
        /// <remarks/>
        public event GetMusicArtistBasicByIdCompletedEventHandler GetMusicArtistBasicByIdCompleted;
        
        /// <remarks/>
        public event GetAllMusicArtistsDetailedCompletedEventHandler GetAllMusicArtistsDetailedCompleted;
        
        /// <remarks/>
        public event GetMusicArtistsDetailedByRangeCompletedEventHandler GetMusicArtistsDetailedByRangeCompleted;
        
        /// <remarks/>
        public event GetMusicArtistDetailedByIdCompletedEventHandler GetMusicArtistDetailedByIdCompleted;
        
        /// <remarks/>
        public event GetMusicTrackCountCompletedEventHandler GetMusicTrackCountCompleted;
        
        /// <remarks/>
        public event GetAllMusicTracksBasicCompletedEventHandler GetAllMusicTracksBasicCompleted;
        
        /// <remarks/>
        public event GetAllMusicTracksDetailedCompletedEventHandler GetAllMusicTracksDetailedCompleted;
        
        /// <remarks/>
        public event GetMusicTracksBasicByRangeCompletedEventHandler GetMusicTracksBasicByRangeCompleted;
        
        /// <remarks/>
        public event GetMusicTracksDetailedByRangeCompletedEventHandler GetMusicTracksDetailedByRangeCompleted;
        
        /// <remarks/>
        public event GetMusicTracksBasicForAlbumCompletedEventHandler GetMusicTracksBasicForAlbumCompleted;
        
        /// <remarks/>
        public event GetMusicTracksDetailedForAlbumCompletedEventHandler GetMusicTracksDetailedForAlbumCompleted;
        
        /// <remarks/>
        public event GetMusicTrackBasicByIdCompletedEventHandler GetMusicTrackBasicByIdCompleted;
        
        /// <remarks/>
        public event GetMusicTrackDetailedByIdCompletedEventHandler GetMusicTrackDetailedByIdCompleted;
        
        /// <remarks/>
        public event GetAllMusicGenresCompletedEventHandler GetAllMusicGenresCompleted;
        
        /// <remarks/>
        public event GetMusicGenresByRangeCompletedEventHandler GetMusicGenresByRangeCompleted;
        
        /// <remarks/>
        public event GetMusicGenresCountCompletedEventHandler GetMusicGenresCountCompleted;
        
        /// <remarks/>
        public event GetAllMusicCategoriesCompletedEventHandler GetAllMusicCategoriesCompleted;
        
        /// <remarks/>
        public event GetPictureCountCompletedEventHandler GetPictureCountCompleted;
        
        /// <remarks/>
        public event GetAllPicturesBasicCompletedEventHandler GetAllPicturesBasicCompleted;
        
        /// <remarks/>
        public event GetAllPicturesDetailedCompletedEventHandler GetAllPicturesDetailedCompleted;
        
        /// <remarks/>
        public event GetPictureBasicByIdCompletedEventHandler GetPictureBasicByIdCompleted;
        
        /// <remarks/>
        public event GetPictureDetailedByIdCompletedEventHandler GetPictureDetailedByIdCompleted;
        
        /// <remarks/>
        public event GetAllPictureCategoriesCompletedEventHandler GetAllPictureCategoriesCompleted;
        
        /// <remarks/>
        public event GetServiceDescriptionCompletedEventHandler GetServiceDescriptionCompleted;
        
        /// <remarks/>
        public event GetMediaItemCompletedEventHandler GetMediaItemCompleted;
        
        /// <remarks/>
        public event SearchCompletedEventHandler SearchCompleted;
        
        /// <remarks/>
        public event SearchResultsByRangeCompletedEventHandler SearchResultsByRangeCompleted;
        
        /// <remarks/>
        public event GetExternalMediaInfoCompletedEventHandler GetExternalMediaInfoCompleted;
        
        /// <remarks/>
        public event GetMovieCountCompletedEventHandler GetMovieCountCompleted;
        
        /// <remarks/>
        public event GetAllMoviesBasicCompletedEventHandler GetAllMoviesBasicCompleted;
        
        /// <remarks/>
        public event GetAllMoviesDetailedCompletedEventHandler GetAllMoviesDetailedCompleted;
        
        /// <remarks/>
        public event GetMoviesBasicByRangeCompletedEventHandler GetMoviesBasicByRangeCompleted;
        
        /// <remarks/>
        public event GetMoviesDetailedByRangeCompletedEventHandler GetMoviesDetailedByRangeCompleted;
        
        /// <remarks/>
        public event GetMovieBasicByIdCompletedEventHandler GetMovieBasicByIdCompleted;
        
        /// <remarks/>
        public event GetMovieDetailedByIdCompletedEventHandler GetMovieDetailedByIdCompleted;
        
        /// <remarks/>
        public event GetAllMovieGenresCompletedEventHandler GetAllMovieGenresCompleted;
        
        /// <remarks/>
        public event GetMovieGenresByRangeCompletedEventHandler GetMovieGenresByRangeCompleted;
        
        /// <remarks/>
        public event GetMovieGenresCountCompletedEventHandler GetMovieGenresCountCompleted;
        
        /// <remarks/>
        public event GetAllMovieCategoriesCompletedEventHandler GetAllMovieCategoriesCompleted;
        
        /// <remarks/>
        public event GetAllMovieActorsCompletedEventHandler GetAllMovieActorsCompleted;
        
        /// <remarks/>
        public event GetMovieActorsByRangeCompletedEventHandler GetMovieActorsByRangeCompleted;
        
        /// <remarks/>
        public event GetMovieActorCountCompletedEventHandler GetMovieActorCountCompleted;
        
        /// <remarks/>
        public event GetMusicAlbumCountCompletedEventHandler GetMusicAlbumCountCompleted;
        
        /// <remarks/>
        public event GetAllMusicAlbumsBasicCompletedEventHandler GetAllMusicAlbumsBasicCompleted;
        
        /// <remarks/>
        public event GetMusicAlbumsBasicByRangeCompletedEventHandler GetMusicAlbumsBasicByRangeCompleted;
        
        /// <remarks/>
        public event GetMusicAlbumsBasicForArtistCompletedEventHandler GetMusicAlbumsBasicForArtistCompleted;
        
        /// <remarks/>
        public event GetMusicAlbumBasicByIdCompletedEventHandler GetMusicAlbumBasicByIdCompleted;
        
        /// <remarks/>
        public event GetMusicArtistCountCompletedEventHandler GetMusicArtistCountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetFileSystemFolderBasicById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebFolderBasic GetFileSystemFolderBasicById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetFileSystemFolderBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebFolderBasic)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileSystemFolderBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetFileSystemFolderBasicByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetFileSystemFolderBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetFileSystemFolderBasicByIdOperationCompleted == null)) {
                this.GetFileSystemFolderBasicByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileSystemFolderBasicByIdOperationCompleted);
            }
            this.InvokeAsync("GetFileSystemFolderBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetFileSystemFolderBasicByIdOperationCompleted, userState);
        }
        
        private void OnGetFileSystemFolderBasicByIdOperationCompleted(object arg) {
            if ((this.GetFileSystemFolderBasicByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileSystemFolderBasicByIdCompleted(this, new GetFileSystemFolderBasicByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetFileSystemFileBasicById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebFileBasic GetFileSystemFileBasicById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetFileSystemFileBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebFileBasic)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileSystemFileBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetFileSystemFileBasicByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetFileSystemFileBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetFileSystemFileBasicByIdOperationCompleted == null)) {
                this.GetFileSystemFileBasicByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileSystemFileBasicByIdOperationCompleted);
            }
            this.InvokeAsync("GetFileSystemFileBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetFileSystemFileBasicByIdOperationCompleted, userState);
        }
        
        private void OnGetFileSystemFileBasicByIdOperationCompleted(object arg) {
            if ((this.GetFileSystemFileBasicByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileSystemFileBasicByIdCompleted(this, new GetFileSystemFileBasicByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetPathList", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] GetPathList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, WebMediaType mediatype, [System.Xml.Serialization.XmlIgnoreAttribute()] bool mediatypeSpecified, WebFileType filetype, [System.Xml.Serialization.XmlIgnoreAttribute()] bool filetypeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetPathList", new object[] {
                        provider,
                        providerSpecified,
                        mediatype,
                        mediatypeSpecified,
                        filetype,
                        filetypeSpecified,
                        id});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPathListAsync(System.Nullable<int> provider, bool providerSpecified, WebMediaType mediatype, bool mediatypeSpecified, WebFileType filetype, bool filetypeSpecified, string id) {
            this.GetPathListAsync(provider, providerSpecified, mediatype, mediatypeSpecified, filetype, filetypeSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetPathListAsync(System.Nullable<int> provider, bool providerSpecified, WebMediaType mediatype, bool mediatypeSpecified, WebFileType filetype, bool filetypeSpecified, string id, object userState) {
            if ((this.GetPathListOperationCompleted == null)) {
                this.GetPathListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPathListOperationCompleted);
            }
            this.InvokeAsync("GetPathList", new object[] {
                        provider,
                        providerSpecified,
                        mediatype,
                        mediatypeSpecified,
                        filetype,
                        filetypeSpecified,
                        id}, this.GetPathListOperationCompleted, userState);
        }
        
        private void OnGetPathListOperationCompleted(object arg) {
            if ((this.GetPathListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPathListCompleted(this, new GetPathListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetFileInfo", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebFileInfo GetFileInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, WebMediaType mediatype, [System.Xml.Serialization.XmlIgnoreAttribute()] bool mediatypeSpecified, WebFileType filetype, [System.Xml.Serialization.XmlIgnoreAttribute()] bool filetypeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, int offset, [System.Xml.Serialization.XmlIgnoreAttribute()] bool offsetSpecified) {
            object[] results = this.Invoke("GetFileInfo", new object[] {
                        provider,
                        providerSpecified,
                        mediatype,
                        mediatypeSpecified,
                        filetype,
                        filetypeSpecified,
                        id,
                        offset,
                        offsetSpecified});
            return ((WebFileInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileInfoAsync(System.Nullable<int> provider, bool providerSpecified, WebMediaType mediatype, bool mediatypeSpecified, WebFileType filetype, bool filetypeSpecified, string id, int offset, bool offsetSpecified) {
            this.GetFileInfoAsync(provider, providerSpecified, mediatype, mediatypeSpecified, filetype, filetypeSpecified, id, offset, offsetSpecified, null);
        }
        
        /// <remarks/>
        public void GetFileInfoAsync(System.Nullable<int> provider, bool providerSpecified, WebMediaType mediatype, bool mediatypeSpecified, WebFileType filetype, bool filetypeSpecified, string id, int offset, bool offsetSpecified, object userState) {
            if ((this.GetFileInfoOperationCompleted == null)) {
                this.GetFileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileInfoOperationCompleted);
            }
            this.InvokeAsync("GetFileInfo", new object[] {
                        provider,
                        providerSpecified,
                        mediatype,
                        mediatypeSpecified,
                        filetype,
                        filetypeSpecified,
                        id,
                        offset,
                        offsetSpecified}, this.GetFileInfoOperationCompleted, userState);
        }
        
        private void OnGetFileInfoOperationCompleted(object arg) {
            if ((this.GetFileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileInfoCompleted(this, new GetFileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/IsLocalFile", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IsLocalFile([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, WebMediaType mediatype, [System.Xml.Serialization.XmlIgnoreAttribute()] bool mediatypeSpecified, WebFileType filetype, [System.Xml.Serialization.XmlIgnoreAttribute()] bool filetypeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, int offset, [System.Xml.Serialization.XmlIgnoreAttribute()] bool offsetSpecified, out bool IsLocalFileResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool IsLocalFileResultSpecified) {
            object[] results = this.Invoke("IsLocalFile", new object[] {
                        provider,
                        providerSpecified,
                        mediatype,
                        mediatypeSpecified,
                        filetype,
                        filetypeSpecified,
                        id,
                        offset,
                        offsetSpecified});
            IsLocalFileResult = ((bool)(results[0]));
            IsLocalFileResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void IsLocalFileAsync(System.Nullable<int> provider, bool providerSpecified, WebMediaType mediatype, bool mediatypeSpecified, WebFileType filetype, bool filetypeSpecified, string id, int offset, bool offsetSpecified) {
            this.IsLocalFileAsync(provider, providerSpecified, mediatype, mediatypeSpecified, filetype, filetypeSpecified, id, offset, offsetSpecified, null);
        }
        
        /// <remarks/>
        public void IsLocalFileAsync(System.Nullable<int> provider, bool providerSpecified, WebMediaType mediatype, bool mediatypeSpecified, WebFileType filetype, bool filetypeSpecified, string id, int offset, bool offsetSpecified, object userState) {
            if ((this.IsLocalFileOperationCompleted == null)) {
                this.IsLocalFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsLocalFileOperationCompleted);
            }
            this.InvokeAsync("IsLocalFile", new object[] {
                        provider,
                        providerSpecified,
                        mediatype,
                        mediatypeSpecified,
                        filetype,
                        filetypeSpecified,
                        id,
                        offset,
                        offsetSpecified}, this.IsLocalFileOperationCompleted, userState);
        }
        
        private void OnIsLocalFileOperationCompleted(object arg) {
            if ((this.IsLocalFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsLocalFileCompleted(this, new IsLocalFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/RetrieveFile", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] RetrieveFile([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, WebMediaType mediatype, [System.Xml.Serialization.XmlIgnoreAttribute()] bool mediatypeSpecified, WebFileType filetype, [System.Xml.Serialization.XmlIgnoreAttribute()] bool filetypeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, int offset, [System.Xml.Serialization.XmlIgnoreAttribute()] bool offsetSpecified) {
            object[] results = this.Invoke("RetrieveFile", new object[] {
                        provider,
                        providerSpecified,
                        mediatype,
                        mediatypeSpecified,
                        filetype,
                        filetypeSpecified,
                        id,
                        offset,
                        offsetSpecified});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveFileAsync(System.Nullable<int> provider, bool providerSpecified, WebMediaType mediatype, bool mediatypeSpecified, WebFileType filetype, bool filetypeSpecified, string id, int offset, bool offsetSpecified) {
            this.RetrieveFileAsync(provider, providerSpecified, mediatype, mediatypeSpecified, filetype, filetypeSpecified, id, offset, offsetSpecified, null);
        }
        
        /// <remarks/>
        public void RetrieveFileAsync(System.Nullable<int> provider, bool providerSpecified, WebMediaType mediatype, bool mediatypeSpecified, WebFileType filetype, bool filetypeSpecified, string id, int offset, bool offsetSpecified, object userState) {
            if ((this.RetrieveFileOperationCompleted == null)) {
                this.RetrieveFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveFileOperationCompleted);
            }
            this.InvokeAsync("RetrieveFile", new object[] {
                        provider,
                        providerSpecified,
                        mediatype,
                        mediatypeSpecified,
                        filetype,
                        filetypeSpecified,
                        id,
                        offset,
                        offsetSpecified}, this.RetrieveFileOperationCompleted, userState);
        }
        
        private void OnRetrieveFileOperationCompleted(object arg) {
            if ((this.RetrieveFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveFileCompleted(this, new RetrieveFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVEpisodesDetailedForTVShowBy" +
            "Range", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.TVShow")]
        public WebTVEpisodeDetailed[] GetTVEpisodesDetailedForTVShowByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetTVEpisodesDetailedForTVShowByRange", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebTVEpisodeDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTVEpisodesDetailedForTVShowByRangeAsync(System.Nullable<int> provider, bool providerSpecified, string id, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetTVEpisodesDetailedForTVShowByRangeAsync(provider, providerSpecified, id, start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetTVEpisodesDetailedForTVShowByRangeAsync(System.Nullable<int> provider, bool providerSpecified, string id, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetTVEpisodesDetailedForTVShowByRangeOperationCompleted == null)) {
                this.GetTVEpisodesDetailedForTVShowByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVEpisodesDetailedForTVShowByRangeOperationCompleted);
            }
            this.InvokeAsync("GetTVEpisodesDetailedForTVShowByRange", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetTVEpisodesDetailedForTVShowByRangeOperationCompleted, userState);
        }
        
        private void OnGetTVEpisodesDetailedForTVShowByRangeOperationCompleted(object arg) {
            if ((this.GetTVEpisodesDetailedForTVShowByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVEpisodesDetailedForTVShowByRangeCompleted(this, new GetTVEpisodesDetailedForTVShowByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVEpisodesBasicForSeason", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.TVShow")]
        public WebTVEpisodeBasic[] GetTVEpisodesBasicForSeason([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetTVEpisodesBasicForSeason", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebTVEpisodeBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTVEpisodesBasicForSeasonAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetTVEpisodesBasicForSeasonAsync(provider, providerSpecified, id, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetTVEpisodesBasicForSeasonAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetTVEpisodesBasicForSeasonOperationCompleted == null)) {
                this.GetTVEpisodesBasicForSeasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVEpisodesBasicForSeasonOperationCompleted);
            }
            this.InvokeAsync("GetTVEpisodesBasicForSeason", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetTVEpisodesBasicForSeasonOperationCompleted, userState);
        }
        
        private void OnGetTVEpisodesBasicForSeasonOperationCompleted(object arg) {
            if ((this.GetTVEpisodesBasicForSeasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVEpisodesBasicForSeasonCompleted(this, new GetTVEpisodesBasicForSeasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVEpisodesDetailedForSeason", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.TVShow")]
        public WebTVEpisodeDetailed[] GetTVEpisodesDetailedForSeason([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetTVEpisodesDetailedForSeason", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebTVEpisodeDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTVEpisodesDetailedForSeasonAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetTVEpisodesDetailedForSeasonAsync(provider, providerSpecified, id, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetTVEpisodesDetailedForSeasonAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetTVEpisodesDetailedForSeasonOperationCompleted == null)) {
                this.GetTVEpisodesDetailedForSeasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVEpisodesDetailedForSeasonOperationCompleted);
            }
            this.InvokeAsync("GetTVEpisodesDetailedForSeason", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetTVEpisodesDetailedForSeasonOperationCompleted, userState);
        }
        
        private void OnGetTVEpisodesDetailedForSeasonOperationCompleted(object arg) {
            if ((this.GetTVEpisodesDetailedForSeasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVEpisodesDetailedForSeasonCompleted(this, new GetTVEpisodesDetailedForSeasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVEpisodeBasicById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebTVEpisodeBasic GetTVEpisodeBasicById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetTVEpisodeBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebTVEpisodeBasic)(results[0]));
        }
        
        /// <remarks/>
        public void GetTVEpisodeBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetTVEpisodeBasicByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetTVEpisodeBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetTVEpisodeBasicByIdOperationCompleted == null)) {
                this.GetTVEpisodeBasicByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVEpisodeBasicByIdOperationCompleted);
            }
            this.InvokeAsync("GetTVEpisodeBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetTVEpisodeBasicByIdOperationCompleted, userState);
        }
        
        private void OnGetTVEpisodeBasicByIdOperationCompleted(object arg) {
            if ((this.GetTVEpisodeBasicByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVEpisodeBasicByIdCompleted(this, new GetTVEpisodeBasicByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVEpisodeDetailedById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebTVEpisodeDetailed GetTVEpisodeDetailedById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetTVEpisodeDetailedById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebTVEpisodeDetailed)(results[0]));
        }
        
        /// <remarks/>
        public void GetTVEpisodeDetailedByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetTVEpisodeDetailedByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetTVEpisodeDetailedByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetTVEpisodeDetailedByIdOperationCompleted == null)) {
                this.GetTVEpisodeDetailedByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVEpisodeDetailedByIdOperationCompleted);
            }
            this.InvokeAsync("GetTVEpisodeDetailedById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetTVEpisodeDetailedByIdOperationCompleted, userState);
        }
        
        private void OnGetTVEpisodeDetailedByIdOperationCompleted(object arg) {
            if ((this.GetTVEpisodeDetailedByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVEpisodeDetailedByIdCompleted(this, new GetTVEpisodeDetailedByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllTVShowCategories", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebCategory[] GetAllTVShowCategories([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified) {
            object[] results = this.Invoke("GetAllTVShowCategories", new object[] {
                        provider,
                        providerSpecified});
            return ((WebCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTVShowCategoriesAsync(System.Nullable<int> provider, bool providerSpecified) {
            this.GetAllTVShowCategoriesAsync(provider, providerSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllTVShowCategoriesAsync(System.Nullable<int> provider, bool providerSpecified, object userState) {
            if ((this.GetAllTVShowCategoriesOperationCompleted == null)) {
                this.GetAllTVShowCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTVShowCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetAllTVShowCategories", new object[] {
                        provider,
                        providerSpecified}, this.GetAllTVShowCategoriesOperationCompleted, userState);
        }
        
        private void OnGetAllTVShowCategoriesOperationCompleted(object arg) {
            if ((this.GetAllTVShowCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTVShowCategoriesCompleted(this, new GetAllTVShowCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllTVShowGenres", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebGenre[] GetAllTVShowGenres([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllTVShowGenres", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebGenre[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTVShowGenresAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllTVShowGenresAsync(provider, providerSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllTVShowGenresAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllTVShowGenresOperationCompleted == null)) {
                this.GetAllTVShowGenresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTVShowGenresOperationCompleted);
            }
            this.InvokeAsync("GetAllTVShowGenres", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllTVShowGenresOperationCompleted, userState);
        }
        
        private void OnGetAllTVShowGenresOperationCompleted(object arg) {
            if ((this.GetAllTVShowGenresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTVShowGenresCompleted(this, new GetAllTVShowGenresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVShowGenresByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebGenre[] GetTVShowGenresByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetTVShowGenresByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebGenre[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTVShowGenresByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetTVShowGenresByRangeAsync(provider, providerSpecified, start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetTVShowGenresByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetTVShowGenresByRangeOperationCompleted == null)) {
                this.GetTVShowGenresByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVShowGenresByRangeOperationCompleted);
            }
            this.InvokeAsync("GetTVShowGenresByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetTVShowGenresByRangeOperationCompleted, userState);
        }
        
        private void OnGetTVShowGenresByRangeOperationCompleted(object arg) {
            if ((this.GetTVShowGenresByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVShowGenresByRangeCompleted(this, new GetTVShowGenresByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVShowGenresCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetTVShowGenresCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified) {
            object[] results = this.Invoke("GetTVShowGenresCount", new object[] {
                        provider,
                        providerSpecified});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetTVShowGenresCountAsync(System.Nullable<int> provider, bool providerSpecified) {
            this.GetTVShowGenresCountAsync(provider, providerSpecified, null);
        }
        
        /// <remarks/>
        public void GetTVShowGenresCountAsync(System.Nullable<int> provider, bool providerSpecified, object userState) {
            if ((this.GetTVShowGenresCountOperationCompleted == null)) {
                this.GetTVShowGenresCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVShowGenresCountOperationCompleted);
            }
            this.InvokeAsync("GetTVShowGenresCount", new object[] {
                        provider,
                        providerSpecified}, this.GetTVShowGenresCountOperationCompleted, userState);
        }
        
        private void OnGetTVShowGenresCountOperationCompleted(object arg) {
            if ((this.GetTVShowGenresCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVShowGenresCountCompleted(this, new GetTVShowGenresCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllTVShowActors", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebActor[] GetAllTVShowActors([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllTVShowActors", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebActor[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTVShowActorsAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllTVShowActorsAsync(provider, providerSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllTVShowActorsAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllTVShowActorsOperationCompleted == null)) {
                this.GetAllTVShowActorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTVShowActorsOperationCompleted);
            }
            this.InvokeAsync("GetAllTVShowActors", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllTVShowActorsOperationCompleted, userState);
        }
        
        private void OnGetAllTVShowActorsOperationCompleted(object arg) {
            if ((this.GetAllTVShowActorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTVShowActorsCompleted(this, new GetAllTVShowActorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVShowActorsByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebActor[] GetTVShowActorsByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetTVShowActorsByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebActor[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTVShowActorsByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetTVShowActorsByRangeAsync(provider, providerSpecified, start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetTVShowActorsByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetTVShowActorsByRangeOperationCompleted == null)) {
                this.GetTVShowActorsByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVShowActorsByRangeOperationCompleted);
            }
            this.InvokeAsync("GetTVShowActorsByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetTVShowActorsByRangeOperationCompleted, userState);
        }
        
        private void OnGetTVShowActorsByRangeOperationCompleted(object arg) {
            if ((this.GetTVShowActorsByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVShowActorsByRangeCompleted(this, new GetTVShowActorsByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVShowActorCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetTVShowActorCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified) {
            object[] results = this.Invoke("GetTVShowActorCount", new object[] {
                        provider,
                        providerSpecified});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetTVShowActorCountAsync(System.Nullable<int> provider, bool providerSpecified) {
            this.GetTVShowActorCountAsync(provider, providerSpecified, null);
        }
        
        /// <remarks/>
        public void GetTVShowActorCountAsync(System.Nullable<int> provider, bool providerSpecified, object userState) {
            if ((this.GetTVShowActorCountOperationCompleted == null)) {
                this.GetTVShowActorCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVShowActorCountOperationCompleted);
            }
            this.InvokeAsync("GetTVShowActorCount", new object[] {
                        provider,
                        providerSpecified}, this.GetTVShowActorCountOperationCompleted, userState);
        }
        
        private void OnGetTVShowActorCountOperationCompleted(object arg) {
            if ((this.GetTVShowActorCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVShowActorCountCompleted(this, new GetTVShowActorCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetFileSystemDriveCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetFileSystemDriveCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified) {
            object[] results = this.Invoke("GetFileSystemDriveCount", new object[] {
                        provider,
                        providerSpecified});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileSystemDriveCountAsync(System.Nullable<int> provider, bool providerSpecified) {
            this.GetFileSystemDriveCountAsync(provider, providerSpecified, null);
        }
        
        /// <remarks/>
        public void GetFileSystemDriveCountAsync(System.Nullable<int> provider, bool providerSpecified, object userState) {
            if ((this.GetFileSystemDriveCountOperationCompleted == null)) {
                this.GetFileSystemDriveCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileSystemDriveCountOperationCompleted);
            }
            this.InvokeAsync("GetFileSystemDriveCount", new object[] {
                        provider,
                        providerSpecified}, this.GetFileSystemDriveCountOperationCompleted, userState);
        }
        
        private void OnGetFileSystemDriveCountOperationCompleted(object arg) {
            if ((this.GetFileSystemDriveCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileSystemDriveCountCompleted(this, new GetFileSystemDriveCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllFileSystemDrives", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.FileSystem")]
        public WebDriveBasic[] GetAllFileSystemDrives([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllFileSystemDrives", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebDriveBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllFileSystemDrivesAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllFileSystemDrivesAsync(provider, providerSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllFileSystemDrivesAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllFileSystemDrivesOperationCompleted == null)) {
                this.GetAllFileSystemDrivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllFileSystemDrivesOperationCompleted);
            }
            this.InvokeAsync("GetAllFileSystemDrives", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllFileSystemDrivesOperationCompleted, userState);
        }
        
        private void OnGetAllFileSystemDrivesOperationCompleted(object arg) {
            if ((this.GetAllFileSystemDrivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllFileSystemDrivesCompleted(this, new GetAllFileSystemDrivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetFileSystemDrivesByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.FileSystem")]
        public WebDriveBasic[] GetFileSystemDrivesByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetFileSystemDrivesByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebDriveBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileSystemDrivesByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetFileSystemDrivesByRangeAsync(provider, providerSpecified, start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetFileSystemDrivesByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetFileSystemDrivesByRangeOperationCompleted == null)) {
                this.GetFileSystemDrivesByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileSystemDrivesByRangeOperationCompleted);
            }
            this.InvokeAsync("GetFileSystemDrivesByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetFileSystemDrivesByRangeOperationCompleted, userState);
        }
        
        private void OnGetFileSystemDrivesByRangeOperationCompleted(object arg) {
            if ((this.GetFileSystemDrivesByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileSystemDrivesByRangeCompleted(this, new GetFileSystemDrivesByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllFileSystemFolders", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.FileSystem")]
        public WebFolderBasic[] GetAllFileSystemFolders([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllFileSystemFolders", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebFolderBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllFileSystemFoldersAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllFileSystemFoldersAsync(provider, providerSpecified, id, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllFileSystemFoldersAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllFileSystemFoldersOperationCompleted == null)) {
                this.GetAllFileSystemFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllFileSystemFoldersOperationCompleted);
            }
            this.InvokeAsync("GetAllFileSystemFolders", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllFileSystemFoldersOperationCompleted, userState);
        }
        
        private void OnGetAllFileSystemFoldersOperationCompleted(object arg) {
            if ((this.GetAllFileSystemFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllFileSystemFoldersCompleted(this, new GetAllFileSystemFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetFileSystemFoldersByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.FileSystem")]
        public WebFolderBasic[] GetFileSystemFoldersByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetFileSystemFoldersByRange", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebFolderBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileSystemFoldersByRangeAsync(System.Nullable<int> provider, bool providerSpecified, string id, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetFileSystemFoldersByRangeAsync(provider, providerSpecified, id, start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetFileSystemFoldersByRangeAsync(System.Nullable<int> provider, bool providerSpecified, string id, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetFileSystemFoldersByRangeOperationCompleted == null)) {
                this.GetFileSystemFoldersByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileSystemFoldersByRangeOperationCompleted);
            }
            this.InvokeAsync("GetFileSystemFoldersByRange", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetFileSystemFoldersByRangeOperationCompleted, userState);
        }
        
        private void OnGetFileSystemFoldersByRangeOperationCompleted(object arg) {
            if ((this.GetFileSystemFoldersByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileSystemFoldersByRangeCompleted(this, new GetFileSystemFoldersByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllFileSystemFiles", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.FileSystem")]
        public WebFileBasic[] GetAllFileSystemFiles([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllFileSystemFiles", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebFileBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllFileSystemFilesAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllFileSystemFilesAsync(provider, providerSpecified, id, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllFileSystemFilesAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllFileSystemFilesOperationCompleted == null)) {
                this.GetAllFileSystemFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllFileSystemFilesOperationCompleted);
            }
            this.InvokeAsync("GetAllFileSystemFiles", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllFileSystemFilesOperationCompleted, userState);
        }
        
        private void OnGetAllFileSystemFilesOperationCompleted(object arg) {
            if ((this.GetAllFileSystemFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllFileSystemFilesCompleted(this, new GetAllFileSystemFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetFileSystemFilesByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.FileSystem")]
        public WebFileBasic[] GetFileSystemFilesByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetFileSystemFilesByRange", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebFileBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileSystemFilesByRangeAsync(System.Nullable<int> provider, bool providerSpecified, string id, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetFileSystemFilesByRangeAsync(provider, providerSpecified, id, start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetFileSystemFilesByRangeAsync(System.Nullable<int> provider, bool providerSpecified, string id, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetFileSystemFilesByRangeOperationCompleted == null)) {
                this.GetFileSystemFilesByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileSystemFilesByRangeOperationCompleted);
            }
            this.InvokeAsync("GetFileSystemFilesByRange", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetFileSystemFilesByRangeOperationCompleted, userState);
        }
        
        private void OnGetFileSystemFilesByRangeOperationCompleted(object arg) {
            if ((this.GetFileSystemFilesByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileSystemFilesByRangeCompleted(this, new GetFileSystemFilesByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllFileSystemFilesAndFolders", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.FileSystem")]
        public WebFilesystemItem[] GetAllFileSystemFilesAndFolders([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllFileSystemFilesAndFolders", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebFilesystemItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllFileSystemFilesAndFoldersAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllFileSystemFilesAndFoldersAsync(provider, providerSpecified, id, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllFileSystemFilesAndFoldersAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllFileSystemFilesAndFoldersOperationCompleted == null)) {
                this.GetAllFileSystemFilesAndFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllFileSystemFilesAndFoldersOperationCompleted);
            }
            this.InvokeAsync("GetAllFileSystemFilesAndFolders", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllFileSystemFilesAndFoldersOperationCompleted, userState);
        }
        
        private void OnGetAllFileSystemFilesAndFoldersOperationCompleted(object arg) {
            if ((this.GetAllFileSystemFilesAndFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllFileSystemFilesAndFoldersCompleted(this, new GetAllFileSystemFilesAndFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetFileSystemFilesAndFoldersByRa" +
            "nge", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.FileSystem")]
        public WebFilesystemItem[] GetFileSystemFilesAndFoldersByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetFileSystemFilesAndFoldersByRange", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebFilesystemItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileSystemFilesAndFoldersByRangeAsync(System.Nullable<int> provider, bool providerSpecified, string id, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetFileSystemFilesAndFoldersByRangeAsync(provider, providerSpecified, id, start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetFileSystemFilesAndFoldersByRangeAsync(System.Nullable<int> provider, bool providerSpecified, string id, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetFileSystemFilesAndFoldersByRangeOperationCompleted == null)) {
                this.GetFileSystemFilesAndFoldersByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileSystemFilesAndFoldersByRangeOperationCompleted);
            }
            this.InvokeAsync("GetFileSystemFilesAndFoldersByRange", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetFileSystemFilesAndFoldersByRangeOperationCompleted, userState);
        }
        
        private void OnGetFileSystemFilesAndFoldersByRangeOperationCompleted(object arg) {
            if ((this.GetFileSystemFilesAndFoldersByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileSystemFilesAndFoldersByRangeCompleted(this, new GetFileSystemFilesAndFoldersByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetFileSystemFilesAndFoldersCoun" +
            "t", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetFileSystemFilesAndFoldersCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetFileSystemFilesAndFoldersCount", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileSystemFilesAndFoldersCountAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetFileSystemFilesAndFoldersCountAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetFileSystemFilesAndFoldersCountAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetFileSystemFilesAndFoldersCountOperationCompleted == null)) {
                this.GetFileSystemFilesAndFoldersCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileSystemFilesAndFoldersCountOperationCompleted);
            }
            this.InvokeAsync("GetFileSystemFilesAndFoldersCount", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetFileSystemFilesAndFoldersCountOperationCompleted, userState);
        }
        
        private void OnGetFileSystemFilesAndFoldersCountOperationCompleted(object arg) {
            if ((this.GetFileSystemFilesAndFoldersCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileSystemFilesAndFoldersCountCompleted(this, new GetFileSystemFilesAndFoldersCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetFileSystemFilesCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetFileSystemFilesCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetFileSystemFilesCount", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileSystemFilesCountAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetFileSystemFilesCountAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetFileSystemFilesCountAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetFileSystemFilesCountOperationCompleted == null)) {
                this.GetFileSystemFilesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileSystemFilesCountOperationCompleted);
            }
            this.InvokeAsync("GetFileSystemFilesCount", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetFileSystemFilesCountOperationCompleted, userState);
        }
        
        private void OnGetFileSystemFilesCountOperationCompleted(object arg) {
            if ((this.GetFileSystemFilesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileSystemFilesCountCompleted(this, new GetFileSystemFilesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetFileSystemFoldersCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetFileSystemFoldersCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetFileSystemFoldersCount", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileSystemFoldersCountAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetFileSystemFoldersCountAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetFileSystemFoldersCountAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetFileSystemFoldersCountOperationCompleted == null)) {
                this.GetFileSystemFoldersCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileSystemFoldersCountOperationCompleted);
            }
            this.InvokeAsync("GetFileSystemFoldersCount", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetFileSystemFoldersCountOperationCompleted, userState);
        }
        
        private void OnGetFileSystemFoldersCountOperationCompleted(object arg) {
            if ((this.GetFileSystemFoldersCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileSystemFoldersCountCompleted(this, new GetFileSystemFoldersCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetFileSystemDriveBasicById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebDriveBasic GetFileSystemDriveBasicById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetFileSystemDriveBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebDriveBasic)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileSystemDriveBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetFileSystemDriveBasicByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetFileSystemDriveBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetFileSystemDriveBasicByIdOperationCompleted == null)) {
                this.GetFileSystemDriveBasicByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileSystemDriveBasicByIdOperationCompleted);
            }
            this.InvokeAsync("GetFileSystemDriveBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetFileSystemDriveBasicByIdOperationCompleted, userState);
        }
        
        private void OnGetFileSystemDriveBasicByIdOperationCompleted(object arg) {
            if ((this.GetFileSystemDriveBasicByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileSystemDriveBasicByIdCompleted(this, new GetFileSystemDriveBasicByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetPictureSubCategories", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebCategory[] GetPictureSubCategories([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetPictureSubCategories", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPictureSubCategoriesAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetPictureSubCategoriesAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetPictureSubCategoriesAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetPictureSubCategoriesOperationCompleted == null)) {
                this.GetPictureSubCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPictureSubCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetPictureSubCategories", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetPictureSubCategoriesOperationCompleted, userState);
        }
        
        private void OnGetPictureSubCategoriesOperationCompleted(object arg) {
            if ((this.GetPictureSubCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPictureSubCategoriesCompleted(this, new GetPictureSubCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetPicturesBasicByCategory", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Picture")]
        public WebPictureBasic[] GetPicturesBasicByCategory([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetPicturesBasicByCategory", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebPictureBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPicturesBasicByCategoryAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetPicturesBasicByCategoryAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetPicturesBasicByCategoryAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetPicturesBasicByCategoryOperationCompleted == null)) {
                this.GetPicturesBasicByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPicturesBasicByCategoryOperationCompleted);
            }
            this.InvokeAsync("GetPicturesBasicByCategory", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetPicturesBasicByCategoryOperationCompleted, userState);
        }
        
        private void OnGetPicturesBasicByCategoryOperationCompleted(object arg) {
            if ((this.GetPicturesBasicByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPicturesBasicByCategoryCompleted(this, new GetPicturesBasicByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetPicturesDetailedByCategory", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Picture")]
        public WebPictureDetailed[] GetPicturesDetailedByCategory([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetPicturesDetailedByCategory", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebPictureDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPicturesDetailedByCategoryAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetPicturesDetailedByCategoryAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetPicturesDetailedByCategoryAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetPicturesDetailedByCategoryOperationCompleted == null)) {
                this.GetPicturesDetailedByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPicturesDetailedByCategoryOperationCompleted);
            }
            this.InvokeAsync("GetPicturesDetailedByCategory", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetPicturesDetailedByCategoryOperationCompleted, userState);
        }
        
        private void OnGetPicturesDetailedByCategoryOperationCompleted(object arg) {
            if ((this.GetPicturesDetailedByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPicturesDetailedByCategoryCompleted(this, new GetPicturesDetailedByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVEpisodeCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetTVEpisodeCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified) {
            object[] results = this.Invoke("GetTVEpisodeCount", new object[] {
                        provider,
                        providerSpecified});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetTVEpisodeCountAsync(System.Nullable<int> provider, bool providerSpecified) {
            this.GetTVEpisodeCountAsync(provider, providerSpecified, null);
        }
        
        /// <remarks/>
        public void GetTVEpisodeCountAsync(System.Nullable<int> provider, bool providerSpecified, object userState) {
            if ((this.GetTVEpisodeCountOperationCompleted == null)) {
                this.GetTVEpisodeCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVEpisodeCountOperationCompleted);
            }
            this.InvokeAsync("GetTVEpisodeCount", new object[] {
                        provider,
                        providerSpecified}, this.GetTVEpisodeCountOperationCompleted, userState);
        }
        
        private void OnGetTVEpisodeCountOperationCompleted(object arg) {
            if ((this.GetTVEpisodeCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVEpisodeCountCompleted(this, new GetTVEpisodeCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVEpisodeCountForTVShow", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetTVEpisodeCountForTVShow([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetTVEpisodeCountForTVShow", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetTVEpisodeCountForTVShowAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetTVEpisodeCountForTVShowAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetTVEpisodeCountForTVShowAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetTVEpisodeCountForTVShowOperationCompleted == null)) {
                this.GetTVEpisodeCountForTVShowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVEpisodeCountForTVShowOperationCompleted);
            }
            this.InvokeAsync("GetTVEpisodeCountForTVShow", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetTVEpisodeCountForTVShowOperationCompleted, userState);
        }
        
        private void OnGetTVEpisodeCountForTVShowOperationCompleted(object arg) {
            if ((this.GetTVEpisodeCountForTVShowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVEpisodeCountForTVShowCompleted(this, new GetTVEpisodeCountForTVShowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVEpisodeCountForSeason", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetTVEpisodeCountForSeason([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetTVEpisodeCountForSeason", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetTVEpisodeCountForSeasonAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetTVEpisodeCountForSeasonAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetTVEpisodeCountForSeasonAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetTVEpisodeCountForSeasonOperationCompleted == null)) {
                this.GetTVEpisodeCountForSeasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVEpisodeCountForSeasonOperationCompleted);
            }
            this.InvokeAsync("GetTVEpisodeCountForSeason", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetTVEpisodeCountForSeasonOperationCompleted, userState);
        }
        
        private void OnGetTVEpisodeCountForSeasonOperationCompleted(object arg) {
            if ((this.GetTVEpisodeCountForSeasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVEpisodeCountForSeasonCompleted(this, new GetTVEpisodeCountForSeasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVShowCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetTVShowCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string actor) {
            object[] results = this.Invoke("GetTVShowCount", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        actor});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetTVShowCountAsync(System.Nullable<int> provider, bool providerSpecified, string genre, string actor) {
            this.GetTVShowCountAsync(provider, providerSpecified, genre, actor, null);
        }
        
        /// <remarks/>
        public void GetTVShowCountAsync(System.Nullable<int> provider, bool providerSpecified, string genre, string actor, object userState) {
            if ((this.GetTVShowCountOperationCompleted == null)) {
                this.GetTVShowCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVShowCountOperationCompleted);
            }
            this.InvokeAsync("GetTVShowCount", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        actor}, this.GetTVShowCountOperationCompleted, userState);
        }
        
        private void OnGetTVShowCountOperationCompleted(object arg) {
            if ((this.GetTVShowCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVShowCountCompleted(this, new GetTVShowCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVSeasonCountForTVShow", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetTVSeasonCountForTVShow([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetTVSeasonCountForTVShow", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetTVSeasonCountForTVShowAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetTVSeasonCountForTVShowAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetTVSeasonCountForTVShowAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetTVSeasonCountForTVShowOperationCompleted == null)) {
                this.GetTVSeasonCountForTVShowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVSeasonCountForTVShowOperationCompleted);
            }
            this.InvokeAsync("GetTVSeasonCountForTVShow", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetTVSeasonCountForTVShowOperationCompleted, userState);
        }
        
        private void OnGetTVSeasonCountForTVShowOperationCompleted(object arg) {
            if ((this.GetTVSeasonCountForTVShowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVSeasonCountForTVShowCompleted(this, new GetTVSeasonCountForTVShowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllTVShowsBasic", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.TVShow")]
        public WebTVShowBasic[] GetAllTVShowsBasic([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string actor, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllTVShowsBasic", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        actor,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebTVShowBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTVShowsBasicAsync(System.Nullable<int> provider, bool providerSpecified, string genre, string actor, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllTVShowsBasicAsync(provider, providerSpecified, genre, actor, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllTVShowsBasicAsync(System.Nullable<int> provider, bool providerSpecified, string genre, string actor, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllTVShowsBasicOperationCompleted == null)) {
                this.GetAllTVShowsBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTVShowsBasicOperationCompleted);
            }
            this.InvokeAsync("GetAllTVShowsBasic", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        actor,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllTVShowsBasicOperationCompleted, userState);
        }
        
        private void OnGetAllTVShowsBasicOperationCompleted(object arg) {
            if ((this.GetAllTVShowsBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTVShowsBasicCompleted(this, new GetAllTVShowsBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllTVShowsDetailed", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.TVShow")]
        public WebTVShowDetailed[] GetAllTVShowsDetailed([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string actor, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllTVShowsDetailed", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        actor,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebTVShowDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTVShowsDetailedAsync(System.Nullable<int> provider, bool providerSpecified, string genre, string actor, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllTVShowsDetailedAsync(provider, providerSpecified, genre, actor, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllTVShowsDetailedAsync(System.Nullable<int> provider, bool providerSpecified, string genre, string actor, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllTVShowsDetailedOperationCompleted == null)) {
                this.GetAllTVShowsDetailedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTVShowsDetailedOperationCompleted);
            }
            this.InvokeAsync("GetAllTVShowsDetailed", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        actor,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllTVShowsDetailedOperationCompleted, userState);
        }
        
        private void OnGetAllTVShowsDetailedOperationCompleted(object arg) {
            if ((this.GetAllTVShowsDetailedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTVShowsDetailedCompleted(this, new GetAllTVShowsDetailedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVShowsBasicByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.TVShow")]
        public WebTVShowBasic[] GetTVShowsBasicByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string actor, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetTVShowsBasicByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        genre,
                        actor,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebTVShowBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTVShowsBasicByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, string genre, string actor, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetTVShowsBasicByRangeAsync(provider, providerSpecified, start, startSpecified, end, endSpecified, genre, actor, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetTVShowsBasicByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, string genre, string actor, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetTVShowsBasicByRangeOperationCompleted == null)) {
                this.GetTVShowsBasicByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVShowsBasicByRangeOperationCompleted);
            }
            this.InvokeAsync("GetTVShowsBasicByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        genre,
                        actor,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetTVShowsBasicByRangeOperationCompleted, userState);
        }
        
        private void OnGetTVShowsBasicByRangeOperationCompleted(object arg) {
            if ((this.GetTVShowsBasicByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVShowsBasicByRangeCompleted(this, new GetTVShowsBasicByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVShowsDetailedByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.TVShow")]
        public WebTVShowDetailed[] GetTVShowsDetailedByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string actor, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetTVShowsDetailedByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        genre,
                        actor,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebTVShowDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTVShowsDetailedByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, string genre, string actor, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetTVShowsDetailedByRangeAsync(provider, providerSpecified, start, startSpecified, end, endSpecified, genre, actor, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetTVShowsDetailedByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, string genre, string actor, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetTVShowsDetailedByRangeOperationCompleted == null)) {
                this.GetTVShowsDetailedByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVShowsDetailedByRangeOperationCompleted);
            }
            this.InvokeAsync("GetTVShowsDetailedByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        genre,
                        actor,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetTVShowsDetailedByRangeOperationCompleted, userState);
        }
        
        private void OnGetTVShowsDetailedByRangeOperationCompleted(object arg) {
            if ((this.GetTVShowsDetailedByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVShowsDetailedByRangeCompleted(this, new GetTVShowsDetailedByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVShowBasicById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebTVShowBasic GetTVShowBasicById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetTVShowBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebTVShowBasic)(results[0]));
        }
        
        /// <remarks/>
        public void GetTVShowBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetTVShowBasicByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetTVShowBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetTVShowBasicByIdOperationCompleted == null)) {
                this.GetTVShowBasicByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVShowBasicByIdOperationCompleted);
            }
            this.InvokeAsync("GetTVShowBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetTVShowBasicByIdOperationCompleted, userState);
        }
        
        private void OnGetTVShowBasicByIdOperationCompleted(object arg) {
            if ((this.GetTVShowBasicByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVShowBasicByIdCompleted(this, new GetTVShowBasicByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVShowDetailedById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebTVShowDetailed GetTVShowDetailedById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetTVShowDetailedById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebTVShowDetailed)(results[0]));
        }
        
        /// <remarks/>
        public void GetTVShowDetailedByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetTVShowDetailedByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetTVShowDetailedByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetTVShowDetailedByIdOperationCompleted == null)) {
                this.GetTVShowDetailedByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVShowDetailedByIdOperationCompleted);
            }
            this.InvokeAsync("GetTVShowDetailedById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetTVShowDetailedByIdOperationCompleted, userState);
        }
        
        private void OnGetTVShowDetailedByIdOperationCompleted(object arg) {
            if ((this.GetTVShowDetailedByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVShowDetailedByIdCompleted(this, new GetTVShowDetailedByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVSeasonsBasicForTVShow", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.TVShow")]
        public WebTVSeasonBasic[] GetTVSeasonsBasicForTVShow([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetTVSeasonsBasicForTVShow", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebTVSeasonBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTVSeasonsBasicForTVShowAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetTVSeasonsBasicForTVShowAsync(provider, providerSpecified, id, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetTVSeasonsBasicForTVShowAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetTVSeasonsBasicForTVShowOperationCompleted == null)) {
                this.GetTVSeasonsBasicForTVShowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVSeasonsBasicForTVShowOperationCompleted);
            }
            this.InvokeAsync("GetTVSeasonsBasicForTVShow", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetTVSeasonsBasicForTVShowOperationCompleted, userState);
        }
        
        private void OnGetTVSeasonsBasicForTVShowOperationCompleted(object arg) {
            if ((this.GetTVSeasonsBasicForTVShowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVSeasonsBasicForTVShowCompleted(this, new GetTVSeasonsBasicForTVShowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVSeasonsDetailedForTVShow", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.TVShow")]
        public WebTVSeasonDetailed[] GetTVSeasonsDetailedForTVShow([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetTVSeasonsDetailedForTVShow", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebTVSeasonDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTVSeasonsDetailedForTVShowAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetTVSeasonsDetailedForTVShowAsync(provider, providerSpecified, id, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetTVSeasonsDetailedForTVShowAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetTVSeasonsDetailedForTVShowOperationCompleted == null)) {
                this.GetTVSeasonsDetailedForTVShowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVSeasonsDetailedForTVShowOperationCompleted);
            }
            this.InvokeAsync("GetTVSeasonsDetailedForTVShow", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetTVSeasonsDetailedForTVShowOperationCompleted, userState);
        }
        
        private void OnGetTVSeasonsDetailedForTVShowOperationCompleted(object arg) {
            if ((this.GetTVSeasonsDetailedForTVShowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVSeasonsDetailedForTVShowCompleted(this, new GetTVSeasonsDetailedForTVShowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVSeasonBasicById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebTVSeasonBasic GetTVSeasonBasicById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetTVSeasonBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebTVSeasonBasic)(results[0]));
        }
        
        /// <remarks/>
        public void GetTVSeasonBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetTVSeasonBasicByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetTVSeasonBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetTVSeasonBasicByIdOperationCompleted == null)) {
                this.GetTVSeasonBasicByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVSeasonBasicByIdOperationCompleted);
            }
            this.InvokeAsync("GetTVSeasonBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetTVSeasonBasicByIdOperationCompleted, userState);
        }
        
        private void OnGetTVSeasonBasicByIdOperationCompleted(object arg) {
            if ((this.GetTVSeasonBasicByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVSeasonBasicByIdCompleted(this, new GetTVSeasonBasicByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVSeasonDetailedById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebTVSeasonDetailed GetTVSeasonDetailedById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetTVSeasonDetailedById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebTVSeasonDetailed)(results[0]));
        }
        
        /// <remarks/>
        public void GetTVSeasonDetailedByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetTVSeasonDetailedByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetTVSeasonDetailedByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetTVSeasonDetailedByIdOperationCompleted == null)) {
                this.GetTVSeasonDetailedByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVSeasonDetailedByIdOperationCompleted);
            }
            this.InvokeAsync("GetTVSeasonDetailedById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetTVSeasonDetailedByIdOperationCompleted, userState);
        }
        
        private void OnGetTVSeasonDetailedByIdOperationCompleted(object arg) {
            if ((this.GetTVSeasonDetailedByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVSeasonDetailedByIdCompleted(this, new GetTVSeasonDetailedByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllTVEpisodesBasic", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.TVShow")]
        public WebTVEpisodeBasic[] GetAllTVEpisodesBasic([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllTVEpisodesBasic", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebTVEpisodeBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTVEpisodesBasicAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllTVEpisodesBasicAsync(provider, providerSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllTVEpisodesBasicAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllTVEpisodesBasicOperationCompleted == null)) {
                this.GetAllTVEpisodesBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTVEpisodesBasicOperationCompleted);
            }
            this.InvokeAsync("GetAllTVEpisodesBasic", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllTVEpisodesBasicOperationCompleted, userState);
        }
        
        private void OnGetAllTVEpisodesBasicOperationCompleted(object arg) {
            if ((this.GetAllTVEpisodesBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTVEpisodesBasicCompleted(this, new GetAllTVEpisodesBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllTVEpisodesDetailed", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.TVShow")]
        public WebTVEpisodeDetailed[] GetAllTVEpisodesDetailed([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllTVEpisodesDetailed", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebTVEpisodeDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTVEpisodesDetailedAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllTVEpisodesDetailedAsync(provider, providerSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllTVEpisodesDetailedAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllTVEpisodesDetailedOperationCompleted == null)) {
                this.GetAllTVEpisodesDetailedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTVEpisodesDetailedOperationCompleted);
            }
            this.InvokeAsync("GetAllTVEpisodesDetailed", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllTVEpisodesDetailedOperationCompleted, userState);
        }
        
        private void OnGetAllTVEpisodesDetailedOperationCompleted(object arg) {
            if ((this.GetAllTVEpisodesDetailedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTVEpisodesDetailedCompleted(this, new GetAllTVEpisodesDetailedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVEpisodesBasicByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.TVShow")]
        public WebTVEpisodeBasic[] GetTVEpisodesBasicByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetTVEpisodesBasicByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebTVEpisodeBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTVEpisodesBasicByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetTVEpisodesBasicByRangeAsync(provider, providerSpecified, start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetTVEpisodesBasicByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetTVEpisodesBasicByRangeOperationCompleted == null)) {
                this.GetTVEpisodesBasicByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVEpisodesBasicByRangeOperationCompleted);
            }
            this.InvokeAsync("GetTVEpisodesBasicByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetTVEpisodesBasicByRangeOperationCompleted, userState);
        }
        
        private void OnGetTVEpisodesBasicByRangeOperationCompleted(object arg) {
            if ((this.GetTVEpisodesBasicByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVEpisodesBasicByRangeCompleted(this, new GetTVEpisodesBasicByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVEpisodesDetailedByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.TVShow")]
        public WebTVEpisodeDetailed[] GetTVEpisodesDetailedByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetTVEpisodesDetailedByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebTVEpisodeDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTVEpisodesDetailedByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetTVEpisodesDetailedByRangeAsync(provider, providerSpecified, start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetTVEpisodesDetailedByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetTVEpisodesDetailedByRangeOperationCompleted == null)) {
                this.GetTVEpisodesDetailedByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVEpisodesDetailedByRangeOperationCompleted);
            }
            this.InvokeAsync("GetTVEpisodesDetailedByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetTVEpisodesDetailedByRangeOperationCompleted, userState);
        }
        
        private void OnGetTVEpisodesDetailedByRangeOperationCompleted(object arg) {
            if ((this.GetTVEpisodesDetailedByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVEpisodesDetailedByRangeCompleted(this, new GetTVEpisodesDetailedByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVEpisodesBasicForTVShow", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.TVShow")]
        public WebTVEpisodeBasic[] GetTVEpisodesBasicForTVShow([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetTVEpisodesBasicForTVShow", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebTVEpisodeBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTVEpisodesBasicForTVShowAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetTVEpisodesBasicForTVShowAsync(provider, providerSpecified, id, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetTVEpisodesBasicForTVShowAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetTVEpisodesBasicForTVShowOperationCompleted == null)) {
                this.GetTVEpisodesBasicForTVShowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVEpisodesBasicForTVShowOperationCompleted);
            }
            this.InvokeAsync("GetTVEpisodesBasicForTVShow", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetTVEpisodesBasicForTVShowOperationCompleted, userState);
        }
        
        private void OnGetTVEpisodesBasicForTVShowOperationCompleted(object arg) {
            if ((this.GetTVEpisodesBasicForTVShowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVEpisodesBasicForTVShowCompleted(this, new GetTVEpisodesBasicForTVShowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVEpisodesDetailedForTVShow", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.TVShow")]
        public WebTVEpisodeDetailed[] GetTVEpisodesDetailedForTVShow([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetTVEpisodesDetailedForTVShow", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebTVEpisodeDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTVEpisodesDetailedForTVShowAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetTVEpisodesDetailedForTVShowAsync(provider, providerSpecified, id, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetTVEpisodesDetailedForTVShowAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetTVEpisodesDetailedForTVShowOperationCompleted == null)) {
                this.GetTVEpisodesDetailedForTVShowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVEpisodesDetailedForTVShowOperationCompleted);
            }
            this.InvokeAsync("GetTVEpisodesDetailedForTVShow", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetTVEpisodesDetailedForTVShowOperationCompleted, userState);
        }
        
        private void OnGetTVEpisodesDetailedForTVShowOperationCompleted(object arg) {
            if ((this.GetTVEpisodesDetailedForTVShowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVEpisodesDetailedForTVShowCompleted(this, new GetTVEpisodesDetailedForTVShowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetTVEpisodesBasicForTVShowByRan" +
            "ge", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.TVShow")]
        public WebTVEpisodeBasic[] GetTVEpisodesBasicForTVShowByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetTVEpisodesBasicForTVShowByRange", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebTVEpisodeBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTVEpisodesBasicForTVShowByRangeAsync(System.Nullable<int> provider, bool providerSpecified, string id, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetTVEpisodesBasicForTVShowByRangeAsync(provider, providerSpecified, id, start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetTVEpisodesBasicForTVShowByRangeAsync(System.Nullable<int> provider, bool providerSpecified, string id, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetTVEpisodesBasicForTVShowByRangeOperationCompleted == null)) {
                this.GetTVEpisodesBasicForTVShowByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTVEpisodesBasicForTVShowByRangeOperationCompleted);
            }
            this.InvokeAsync("GetTVEpisodesBasicForTVShowByRange", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetTVEpisodesBasicForTVShowByRangeOperationCompleted, userState);
        }
        
        private void OnGetTVEpisodesBasicForTVShowByRangeOperationCompleted(object arg) {
            if ((this.GetTVEpisodesBasicForTVShowByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTVEpisodesBasicForTVShowByRangeCompleted(this, new GetTVEpisodesBasicForTVShowByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllMusicArtistsBasic", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Music")]
        public WebMusicArtistBasic[] GetAllMusicArtistsBasic([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllMusicArtistsBasic", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebMusicArtistBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMusicArtistsBasicAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllMusicArtistsBasicAsync(provider, providerSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllMusicArtistsBasicAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllMusicArtistsBasicOperationCompleted == null)) {
                this.GetAllMusicArtistsBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMusicArtistsBasicOperationCompleted);
            }
            this.InvokeAsync("GetAllMusicArtistsBasic", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllMusicArtistsBasicOperationCompleted, userState);
        }
        
        private void OnGetAllMusicArtistsBasicOperationCompleted(object arg) {
            if ((this.GetAllMusicArtistsBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMusicArtistsBasicCompleted(this, new GetAllMusicArtistsBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicArtistsBasicByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Music")]
        public WebMusicArtistBasic[] GetMusicArtistsBasicByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetMusicArtistsBasicByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebMusicArtistBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicArtistsBasicByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetMusicArtistsBasicByRangeAsync(provider, providerSpecified, start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetMusicArtistsBasicByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetMusicArtistsBasicByRangeOperationCompleted == null)) {
                this.GetMusicArtistsBasicByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicArtistsBasicByRangeOperationCompleted);
            }
            this.InvokeAsync("GetMusicArtistsBasicByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetMusicArtistsBasicByRangeOperationCompleted, userState);
        }
        
        private void OnGetMusicArtistsBasicByRangeOperationCompleted(object arg) {
            if ((this.GetMusicArtistsBasicByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicArtistsBasicByRangeCompleted(this, new GetMusicArtistsBasicByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicArtistBasicById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebMusicArtistBasic GetMusicArtistBasicById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetMusicArtistBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebMusicArtistBasic)(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicArtistBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetMusicArtistBasicByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetMusicArtistBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetMusicArtistBasicByIdOperationCompleted == null)) {
                this.GetMusicArtistBasicByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicArtistBasicByIdOperationCompleted);
            }
            this.InvokeAsync("GetMusicArtistBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetMusicArtistBasicByIdOperationCompleted, userState);
        }
        
        private void OnGetMusicArtistBasicByIdOperationCompleted(object arg) {
            if ((this.GetMusicArtistBasicByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicArtistBasicByIdCompleted(this, new GetMusicArtistBasicByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllMusicArtistsDetailed", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Music")]
        public WebMusicArtistDetailed[] GetAllMusicArtistsDetailed([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllMusicArtistsDetailed", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebMusicArtistDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMusicArtistsDetailedAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllMusicArtistsDetailedAsync(provider, providerSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllMusicArtistsDetailedAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllMusicArtistsDetailedOperationCompleted == null)) {
                this.GetAllMusicArtistsDetailedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMusicArtistsDetailedOperationCompleted);
            }
            this.InvokeAsync("GetAllMusicArtistsDetailed", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllMusicArtistsDetailedOperationCompleted, userState);
        }
        
        private void OnGetAllMusicArtistsDetailedOperationCompleted(object arg) {
            if ((this.GetAllMusicArtistsDetailedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMusicArtistsDetailedCompleted(this, new GetAllMusicArtistsDetailedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicArtistsDetailedByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Music")]
        public WebMusicArtistDetailed[] GetMusicArtistsDetailedByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetMusicArtistsDetailedByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebMusicArtistDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicArtistsDetailedByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetMusicArtistsDetailedByRangeAsync(provider, providerSpecified, start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetMusicArtistsDetailedByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetMusicArtistsDetailedByRangeOperationCompleted == null)) {
                this.GetMusicArtistsDetailedByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicArtistsDetailedByRangeOperationCompleted);
            }
            this.InvokeAsync("GetMusicArtistsDetailedByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetMusicArtistsDetailedByRangeOperationCompleted, userState);
        }
        
        private void OnGetMusicArtistsDetailedByRangeOperationCompleted(object arg) {
            if ((this.GetMusicArtistsDetailedByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicArtistsDetailedByRangeCompleted(this, new GetMusicArtistsDetailedByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicArtistDetailedById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebMusicArtistDetailed GetMusicArtistDetailedById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetMusicArtistDetailedById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebMusicArtistDetailed)(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicArtistDetailedByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetMusicArtistDetailedByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetMusicArtistDetailedByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetMusicArtistDetailedByIdOperationCompleted == null)) {
                this.GetMusicArtistDetailedByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicArtistDetailedByIdOperationCompleted);
            }
            this.InvokeAsync("GetMusicArtistDetailedById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetMusicArtistDetailedByIdOperationCompleted, userState);
        }
        
        private void OnGetMusicArtistDetailedByIdOperationCompleted(object arg) {
            if ((this.GetMusicArtistDetailedByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicArtistDetailedByIdCompleted(this, new GetMusicArtistDetailedByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicTrackCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetMusicTrackCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre) {
            object[] results = this.Invoke("GetMusicTrackCount", new object[] {
                        provider,
                        providerSpecified,
                        genre});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicTrackCountAsync(System.Nullable<int> provider, bool providerSpecified, string genre) {
            this.GetMusicTrackCountAsync(provider, providerSpecified, genre, null);
        }
        
        /// <remarks/>
        public void GetMusicTrackCountAsync(System.Nullable<int> provider, bool providerSpecified, string genre, object userState) {
            if ((this.GetMusicTrackCountOperationCompleted == null)) {
                this.GetMusicTrackCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicTrackCountOperationCompleted);
            }
            this.InvokeAsync("GetMusicTrackCount", new object[] {
                        provider,
                        providerSpecified,
                        genre}, this.GetMusicTrackCountOperationCompleted, userState);
        }
        
        private void OnGetMusicTrackCountOperationCompleted(object arg) {
            if ((this.GetMusicTrackCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicTrackCountCompleted(this, new GetMusicTrackCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllMusicTracksBasic", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Music")]
        public WebMusicTrackBasic[] GetAllMusicTracksBasic([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllMusicTracksBasic", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebMusicTrackBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMusicTracksBasicAsync(System.Nullable<int> provider, bool providerSpecified, string genre, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllMusicTracksBasicAsync(provider, providerSpecified, genre, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllMusicTracksBasicAsync(System.Nullable<int> provider, bool providerSpecified, string genre, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllMusicTracksBasicOperationCompleted == null)) {
                this.GetAllMusicTracksBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMusicTracksBasicOperationCompleted);
            }
            this.InvokeAsync("GetAllMusicTracksBasic", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllMusicTracksBasicOperationCompleted, userState);
        }
        
        private void OnGetAllMusicTracksBasicOperationCompleted(object arg) {
            if ((this.GetAllMusicTracksBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMusicTracksBasicCompleted(this, new GetAllMusicTracksBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllMusicTracksDetailed", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Music")]
        public WebMusicTrackDetailed[] GetAllMusicTracksDetailed([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllMusicTracksDetailed", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebMusicTrackDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMusicTracksDetailedAsync(System.Nullable<int> provider, bool providerSpecified, string genre, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllMusicTracksDetailedAsync(provider, providerSpecified, genre, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllMusicTracksDetailedAsync(System.Nullable<int> provider, bool providerSpecified, string genre, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllMusicTracksDetailedOperationCompleted == null)) {
                this.GetAllMusicTracksDetailedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMusicTracksDetailedOperationCompleted);
            }
            this.InvokeAsync("GetAllMusicTracksDetailed", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllMusicTracksDetailedOperationCompleted, userState);
        }
        
        private void OnGetAllMusicTracksDetailedOperationCompleted(object arg) {
            if ((this.GetAllMusicTracksDetailedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMusicTracksDetailedCompleted(this, new GetAllMusicTracksDetailedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicTracksBasicByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Music")]
        public WebMusicTrackBasic[] GetMusicTracksBasicByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetMusicTracksBasicByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        genre,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebMusicTrackBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicTracksBasicByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, string genre, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetMusicTracksBasicByRangeAsync(provider, providerSpecified, start, startSpecified, end, endSpecified, genre, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetMusicTracksBasicByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, string genre, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetMusicTracksBasicByRangeOperationCompleted == null)) {
                this.GetMusicTracksBasicByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicTracksBasicByRangeOperationCompleted);
            }
            this.InvokeAsync("GetMusicTracksBasicByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        genre,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetMusicTracksBasicByRangeOperationCompleted, userState);
        }
        
        private void OnGetMusicTracksBasicByRangeOperationCompleted(object arg) {
            if ((this.GetMusicTracksBasicByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicTracksBasicByRangeCompleted(this, new GetMusicTracksBasicByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicTracksDetailedByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Music")]
        public WebMusicTrackDetailed[] GetMusicTracksDetailedByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetMusicTracksDetailedByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        genre,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebMusicTrackDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicTracksDetailedByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, string genre, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetMusicTracksDetailedByRangeAsync(provider, providerSpecified, start, startSpecified, end, endSpecified, genre, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetMusicTracksDetailedByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, string genre, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetMusicTracksDetailedByRangeOperationCompleted == null)) {
                this.GetMusicTracksDetailedByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicTracksDetailedByRangeOperationCompleted);
            }
            this.InvokeAsync("GetMusicTracksDetailedByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        genre,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetMusicTracksDetailedByRangeOperationCompleted, userState);
        }
        
        private void OnGetMusicTracksDetailedByRangeOperationCompleted(object arg) {
            if ((this.GetMusicTracksDetailedByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicTracksDetailedByRangeCompleted(this, new GetMusicTracksDetailedByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicTracksBasicForAlbum", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Music")]
        public WebMusicTrackBasic[] GetMusicTracksBasicForAlbum([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetMusicTracksBasicForAlbum", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebMusicTrackBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicTracksBasicForAlbumAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetMusicTracksBasicForAlbumAsync(provider, providerSpecified, id, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetMusicTracksBasicForAlbumAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetMusicTracksBasicForAlbumOperationCompleted == null)) {
                this.GetMusicTracksBasicForAlbumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicTracksBasicForAlbumOperationCompleted);
            }
            this.InvokeAsync("GetMusicTracksBasicForAlbum", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetMusicTracksBasicForAlbumOperationCompleted, userState);
        }
        
        private void OnGetMusicTracksBasicForAlbumOperationCompleted(object arg) {
            if ((this.GetMusicTracksBasicForAlbumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicTracksBasicForAlbumCompleted(this, new GetMusicTracksBasicForAlbumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicTracksDetailedForAlbum", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Music")]
        public WebMusicTrackDetailed[] GetMusicTracksDetailedForAlbum([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetMusicTracksDetailedForAlbum", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebMusicTrackDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicTracksDetailedForAlbumAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetMusicTracksDetailedForAlbumAsync(provider, providerSpecified, id, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetMusicTracksDetailedForAlbumAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetMusicTracksDetailedForAlbumOperationCompleted == null)) {
                this.GetMusicTracksDetailedForAlbumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicTracksDetailedForAlbumOperationCompleted);
            }
            this.InvokeAsync("GetMusicTracksDetailedForAlbum", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetMusicTracksDetailedForAlbumOperationCompleted, userState);
        }
        
        private void OnGetMusicTracksDetailedForAlbumOperationCompleted(object arg) {
            if ((this.GetMusicTracksDetailedForAlbumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicTracksDetailedForAlbumCompleted(this, new GetMusicTracksDetailedForAlbumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicTrackBasicById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebMusicTrackBasic GetMusicTrackBasicById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetMusicTrackBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebMusicTrackBasic)(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicTrackBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetMusicTrackBasicByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetMusicTrackBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetMusicTrackBasicByIdOperationCompleted == null)) {
                this.GetMusicTrackBasicByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicTrackBasicByIdOperationCompleted);
            }
            this.InvokeAsync("GetMusicTrackBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetMusicTrackBasicByIdOperationCompleted, userState);
        }
        
        private void OnGetMusicTrackBasicByIdOperationCompleted(object arg) {
            if ((this.GetMusicTrackBasicByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicTrackBasicByIdCompleted(this, new GetMusicTrackBasicByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicTrackDetailedById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebMusicTrackDetailed GetMusicTrackDetailedById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetMusicTrackDetailedById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebMusicTrackDetailed)(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicTrackDetailedByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetMusicTrackDetailedByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetMusicTrackDetailedByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetMusicTrackDetailedByIdOperationCompleted == null)) {
                this.GetMusicTrackDetailedByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicTrackDetailedByIdOperationCompleted);
            }
            this.InvokeAsync("GetMusicTrackDetailedById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetMusicTrackDetailedByIdOperationCompleted, userState);
        }
        
        private void OnGetMusicTrackDetailedByIdOperationCompleted(object arg) {
            if ((this.GetMusicTrackDetailedByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicTrackDetailedByIdCompleted(this, new GetMusicTrackDetailedByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllMusicGenres", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebGenre[] GetAllMusicGenres([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllMusicGenres", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebGenre[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMusicGenresAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllMusicGenresAsync(provider, providerSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllMusicGenresAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllMusicGenresOperationCompleted == null)) {
                this.GetAllMusicGenresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMusicGenresOperationCompleted);
            }
            this.InvokeAsync("GetAllMusicGenres", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllMusicGenresOperationCompleted, userState);
        }
        
        private void OnGetAllMusicGenresOperationCompleted(object arg) {
            if ((this.GetAllMusicGenresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMusicGenresCompleted(this, new GetAllMusicGenresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicGenresByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebGenre[] GetMusicGenresByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetMusicGenresByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebGenre[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicGenresByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetMusicGenresByRangeAsync(provider, providerSpecified, start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetMusicGenresByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetMusicGenresByRangeOperationCompleted == null)) {
                this.GetMusicGenresByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicGenresByRangeOperationCompleted);
            }
            this.InvokeAsync("GetMusicGenresByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetMusicGenresByRangeOperationCompleted, userState);
        }
        
        private void OnGetMusicGenresByRangeOperationCompleted(object arg) {
            if ((this.GetMusicGenresByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicGenresByRangeCompleted(this, new GetMusicGenresByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicGenresCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetMusicGenresCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified) {
            object[] results = this.Invoke("GetMusicGenresCount", new object[] {
                        provider,
                        providerSpecified});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicGenresCountAsync(System.Nullable<int> provider, bool providerSpecified) {
            this.GetMusicGenresCountAsync(provider, providerSpecified, null);
        }
        
        /// <remarks/>
        public void GetMusicGenresCountAsync(System.Nullable<int> provider, bool providerSpecified, object userState) {
            if ((this.GetMusicGenresCountOperationCompleted == null)) {
                this.GetMusicGenresCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicGenresCountOperationCompleted);
            }
            this.InvokeAsync("GetMusicGenresCount", new object[] {
                        provider,
                        providerSpecified}, this.GetMusicGenresCountOperationCompleted, userState);
        }
        
        private void OnGetMusicGenresCountOperationCompleted(object arg) {
            if ((this.GetMusicGenresCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicGenresCountCompleted(this, new GetMusicGenresCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllMusicCategories", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebCategory[] GetAllMusicCategories([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified) {
            object[] results = this.Invoke("GetAllMusicCategories", new object[] {
                        provider,
                        providerSpecified});
            return ((WebCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMusicCategoriesAsync(System.Nullable<int> provider, bool providerSpecified) {
            this.GetAllMusicCategoriesAsync(provider, providerSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllMusicCategoriesAsync(System.Nullable<int> provider, bool providerSpecified, object userState) {
            if ((this.GetAllMusicCategoriesOperationCompleted == null)) {
                this.GetAllMusicCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMusicCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetAllMusicCategories", new object[] {
                        provider,
                        providerSpecified}, this.GetAllMusicCategoriesOperationCompleted, userState);
        }
        
        private void OnGetAllMusicCategoriesOperationCompleted(object arg) {
            if ((this.GetAllMusicCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMusicCategoriesCompleted(this, new GetAllMusicCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetPictureCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetPictureCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified) {
            object[] results = this.Invoke("GetPictureCount", new object[] {
                        provider,
                        providerSpecified});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetPictureCountAsync(System.Nullable<int> provider, bool providerSpecified) {
            this.GetPictureCountAsync(provider, providerSpecified, null);
        }
        
        /// <remarks/>
        public void GetPictureCountAsync(System.Nullable<int> provider, bool providerSpecified, object userState) {
            if ((this.GetPictureCountOperationCompleted == null)) {
                this.GetPictureCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPictureCountOperationCompleted);
            }
            this.InvokeAsync("GetPictureCount", new object[] {
                        provider,
                        providerSpecified}, this.GetPictureCountOperationCompleted, userState);
        }
        
        private void OnGetPictureCountOperationCompleted(object arg) {
            if ((this.GetPictureCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPictureCountCompleted(this, new GetPictureCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllPicturesBasic", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Picture")]
        public WebPictureBasic[] GetAllPicturesBasic([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllPicturesBasic", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebPictureBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPicturesBasicAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllPicturesBasicAsync(provider, providerSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllPicturesBasicAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllPicturesBasicOperationCompleted == null)) {
                this.GetAllPicturesBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPicturesBasicOperationCompleted);
            }
            this.InvokeAsync("GetAllPicturesBasic", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllPicturesBasicOperationCompleted, userState);
        }
        
        private void OnGetAllPicturesBasicOperationCompleted(object arg) {
            if ((this.GetAllPicturesBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPicturesBasicCompleted(this, new GetAllPicturesBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllPicturesDetailed", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Picture")]
        public WebPictureDetailed[] GetAllPicturesDetailed([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllPicturesDetailed", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebPictureDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPicturesDetailedAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllPicturesDetailedAsync(provider, providerSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllPicturesDetailedAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllPicturesDetailedOperationCompleted == null)) {
                this.GetAllPicturesDetailedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPicturesDetailedOperationCompleted);
            }
            this.InvokeAsync("GetAllPicturesDetailed", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllPicturesDetailedOperationCompleted, userState);
        }
        
        private void OnGetAllPicturesDetailedOperationCompleted(object arg) {
            if ((this.GetAllPicturesDetailedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPicturesDetailedCompleted(this, new GetAllPicturesDetailedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetPictureBasicById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebPictureBasic GetPictureBasicById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetPictureBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebPictureBasic)(results[0]));
        }
        
        /// <remarks/>
        public void GetPictureBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetPictureBasicByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetPictureBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetPictureBasicByIdOperationCompleted == null)) {
                this.GetPictureBasicByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPictureBasicByIdOperationCompleted);
            }
            this.InvokeAsync("GetPictureBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetPictureBasicByIdOperationCompleted, userState);
        }
        
        private void OnGetPictureBasicByIdOperationCompleted(object arg) {
            if ((this.GetPictureBasicByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPictureBasicByIdCompleted(this, new GetPictureBasicByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetPictureDetailedById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebPictureDetailed GetPictureDetailedById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetPictureDetailedById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebPictureDetailed)(results[0]));
        }
        
        /// <remarks/>
        public void GetPictureDetailedByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetPictureDetailedByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetPictureDetailedByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetPictureDetailedByIdOperationCompleted == null)) {
                this.GetPictureDetailedByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPictureDetailedByIdOperationCompleted);
            }
            this.InvokeAsync("GetPictureDetailedById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetPictureDetailedByIdOperationCompleted, userState);
        }
        
        private void OnGetPictureDetailedByIdOperationCompleted(object arg) {
            if ((this.GetPictureDetailedByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPictureDetailedByIdCompleted(this, new GetPictureDetailedByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllPictureCategories", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebCategory[] GetAllPictureCategories([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified) {
            object[] results = this.Invoke("GetAllPictureCategories", new object[] {
                        provider,
                        providerSpecified});
            return ((WebCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPictureCategoriesAsync(System.Nullable<int> provider, bool providerSpecified) {
            this.GetAllPictureCategoriesAsync(provider, providerSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllPictureCategoriesAsync(System.Nullable<int> provider, bool providerSpecified, object userState) {
            if ((this.GetAllPictureCategoriesOperationCompleted == null)) {
                this.GetAllPictureCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPictureCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetAllPictureCategories", new object[] {
                        provider,
                        providerSpecified}, this.GetAllPictureCategoriesOperationCompleted, userState);
        }
        
        private void OnGetAllPictureCategoriesOperationCompleted(object arg) {
            if ((this.GetAllPictureCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPictureCategoriesCompleted(this, new GetAllPictureCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetServiceDescription", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebMediaServiceDescription GetServiceDescription() {
            object[] results = this.Invoke("GetServiceDescription", new object[0]);
            return ((WebMediaServiceDescription)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceDescriptionAsync() {
            this.GetServiceDescriptionAsync(null);
        }
        
        /// <remarks/>
        public void GetServiceDescriptionAsync(object userState) {
            if ((this.GetServiceDescriptionOperationCompleted == null)) {
                this.GetServiceDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetServiceDescription", new object[0], this.GetServiceDescriptionOperationCompleted, userState);
        }
        
        private void OnGetServiceDescriptionOperationCompleted(object arg) {
            if ((this.GetServiceDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceDescriptionCompleted(this, new GetServiceDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMediaItem", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebMediaItem GetMediaItem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, WebMediaType type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetMediaItem", new object[] {
                        provider,
                        providerSpecified,
                        type,
                        typeSpecified,
                        id});
            return ((WebMediaItem)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediaItemAsync(System.Nullable<int> provider, bool providerSpecified, WebMediaType type, bool typeSpecified, string id) {
            this.GetMediaItemAsync(provider, providerSpecified, type, typeSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetMediaItemAsync(System.Nullable<int> provider, bool providerSpecified, WebMediaType type, bool typeSpecified, string id, object userState) {
            if ((this.GetMediaItemOperationCompleted == null)) {
                this.GetMediaItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaItemOperationCompleted);
            }
            this.InvokeAsync("GetMediaItem", new object[] {
                        provider,
                        providerSpecified,
                        type,
                        typeSpecified,
                        id}, this.GetMediaItemOperationCompleted, userState);
        }
        
        private void OnGetMediaItemOperationCompleted(object arg) {
            if ((this.GetMediaItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediaItemCompleted(this, new GetMediaItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/Search", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebSearchResult[] Search([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string text) {
            object[] results = this.Invoke("Search", new object[] {
                        text});
            return ((WebSearchResult[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchAsync(string text) {
            this.SearchAsync(text, null);
        }
        
        /// <remarks/>
        public void SearchAsync(string text, object userState) {
            if ((this.SearchOperationCompleted == null)) {
                this.SearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchOperationCompleted);
            }
            this.InvokeAsync("Search", new object[] {
                        text}, this.SearchOperationCompleted, userState);
        }
        
        private void OnSearchOperationCompleted(object arg) {
            if ((this.SearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCompleted(this, new SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/SearchResultsByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebSearchResult[] SearchResultsByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string text, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified) {
            object[] results = this.Invoke("SearchResultsByRange", new object[] {
                        text,
                        start,
                        startSpecified,
                        end,
                        endSpecified});
            return ((WebSearchResult[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchResultsByRangeAsync(string text, int start, bool startSpecified, int end, bool endSpecified) {
            this.SearchResultsByRangeAsync(text, start, startSpecified, end, endSpecified, null);
        }
        
        /// <remarks/>
        public void SearchResultsByRangeAsync(string text, int start, bool startSpecified, int end, bool endSpecified, object userState) {
            if ((this.SearchResultsByRangeOperationCompleted == null)) {
                this.SearchResultsByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchResultsByRangeOperationCompleted);
            }
            this.InvokeAsync("SearchResultsByRange", new object[] {
                        text,
                        start,
                        startSpecified,
                        end,
                        endSpecified}, this.SearchResultsByRangeOperationCompleted, userState);
        }
        
        private void OnSearchResultsByRangeOperationCompleted(object arg) {
            if ((this.SearchResultsByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchResultsByRangeCompleted(this, new SearchResultsByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetExternalMediaInfo", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SerializableDictionaryOfstring GetExternalMediaInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, WebMediaType type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetExternalMediaInfo", new object[] {
                        provider,
                        providerSpecified,
                        type,
                        typeSpecified,
                        id});
            return ((SerializableDictionaryOfstring)(results[0]));
        }
        
        /// <remarks/>
        public void GetExternalMediaInfoAsync(System.Nullable<int> provider, bool providerSpecified, WebMediaType type, bool typeSpecified, string id) {
            this.GetExternalMediaInfoAsync(provider, providerSpecified, type, typeSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetExternalMediaInfoAsync(System.Nullable<int> provider, bool providerSpecified, WebMediaType type, bool typeSpecified, string id, object userState) {
            if ((this.GetExternalMediaInfoOperationCompleted == null)) {
                this.GetExternalMediaInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExternalMediaInfoOperationCompleted);
            }
            this.InvokeAsync("GetExternalMediaInfo", new object[] {
                        provider,
                        providerSpecified,
                        type,
                        typeSpecified,
                        id}, this.GetExternalMediaInfoOperationCompleted, userState);
        }
        
        private void OnGetExternalMediaInfoOperationCompleted(object arg) {
            if ((this.GetExternalMediaInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExternalMediaInfoCompleted(this, new GetExternalMediaInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMovieCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetMovieCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string actor) {
            object[] results = this.Invoke("GetMovieCount", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        actor});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetMovieCountAsync(System.Nullable<int> provider, bool providerSpecified, string genre, string actor) {
            this.GetMovieCountAsync(provider, providerSpecified, genre, actor, null);
        }
        
        /// <remarks/>
        public void GetMovieCountAsync(System.Nullable<int> provider, bool providerSpecified, string genre, string actor, object userState) {
            if ((this.GetMovieCountOperationCompleted == null)) {
                this.GetMovieCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMovieCountOperationCompleted);
            }
            this.InvokeAsync("GetMovieCount", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        actor}, this.GetMovieCountOperationCompleted, userState);
        }
        
        private void OnGetMovieCountOperationCompleted(object arg) {
            if ((this.GetMovieCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMovieCountCompleted(this, new GetMovieCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllMoviesBasic", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Movie")]
        public WebMovieBasic[] GetAllMoviesBasic([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string actor, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllMoviesBasic", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        actor,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebMovieBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMoviesBasicAsync(System.Nullable<int> provider, bool providerSpecified, string genre, string actor, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllMoviesBasicAsync(provider, providerSpecified, genre, actor, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllMoviesBasicAsync(System.Nullable<int> provider, bool providerSpecified, string genre, string actor, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllMoviesBasicOperationCompleted == null)) {
                this.GetAllMoviesBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMoviesBasicOperationCompleted);
            }
            this.InvokeAsync("GetAllMoviesBasic", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        actor,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllMoviesBasicOperationCompleted, userState);
        }
        
        private void OnGetAllMoviesBasicOperationCompleted(object arg) {
            if ((this.GetAllMoviesBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMoviesBasicCompleted(this, new GetAllMoviesBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllMoviesDetailed", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Movie")]
        public WebMovieDetailed[] GetAllMoviesDetailed([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string actor, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllMoviesDetailed", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        actor,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebMovieDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMoviesDetailedAsync(System.Nullable<int> provider, bool providerSpecified, string genre, string actor, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllMoviesDetailedAsync(provider, providerSpecified, genre, actor, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllMoviesDetailedAsync(System.Nullable<int> provider, bool providerSpecified, string genre, string actor, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllMoviesDetailedOperationCompleted == null)) {
                this.GetAllMoviesDetailedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMoviesDetailedOperationCompleted);
            }
            this.InvokeAsync("GetAllMoviesDetailed", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        actor,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllMoviesDetailedOperationCompleted, userState);
        }
        
        private void OnGetAllMoviesDetailedOperationCompleted(object arg) {
            if ((this.GetAllMoviesDetailedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMoviesDetailedCompleted(this, new GetAllMoviesDetailedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMoviesBasicByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Movie")]
        public WebMovieBasic[] GetMoviesBasicByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string actor, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetMoviesBasicByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        genre,
                        actor,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebMovieBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMoviesBasicByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, string genre, string actor, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetMoviesBasicByRangeAsync(provider, providerSpecified, start, startSpecified, end, endSpecified, genre, actor, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetMoviesBasicByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, string genre, string actor, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetMoviesBasicByRangeOperationCompleted == null)) {
                this.GetMoviesBasicByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMoviesBasicByRangeOperationCompleted);
            }
            this.InvokeAsync("GetMoviesBasicByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        genre,
                        actor,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetMoviesBasicByRangeOperationCompleted, userState);
        }
        
        private void OnGetMoviesBasicByRangeOperationCompleted(object arg) {
            if ((this.GetMoviesBasicByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMoviesBasicByRangeCompleted(this, new GetMoviesBasicByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMoviesDetailedByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Movie")]
        public WebMovieDetailed[] GetMoviesDetailedByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string actor, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetMoviesDetailedByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        genre,
                        actor,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebMovieDetailed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMoviesDetailedByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, string genre, string actor, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetMoviesDetailedByRangeAsync(provider, providerSpecified, start, startSpecified, end, endSpecified, genre, actor, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetMoviesDetailedByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, string genre, string actor, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetMoviesDetailedByRangeOperationCompleted == null)) {
                this.GetMoviesDetailedByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMoviesDetailedByRangeOperationCompleted);
            }
            this.InvokeAsync("GetMoviesDetailedByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        genre,
                        actor,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetMoviesDetailedByRangeOperationCompleted, userState);
        }
        
        private void OnGetMoviesDetailedByRangeOperationCompleted(object arg) {
            if ((this.GetMoviesDetailedByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMoviesDetailedByRangeCompleted(this, new GetMoviesDetailedByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMovieBasicById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebMovieBasic GetMovieBasicById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetMovieBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebMovieBasic)(results[0]));
        }
        
        /// <remarks/>
        public void GetMovieBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetMovieBasicByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetMovieBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetMovieBasicByIdOperationCompleted == null)) {
                this.GetMovieBasicByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMovieBasicByIdOperationCompleted);
            }
            this.InvokeAsync("GetMovieBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetMovieBasicByIdOperationCompleted, userState);
        }
        
        private void OnGetMovieBasicByIdOperationCompleted(object arg) {
            if ((this.GetMovieBasicByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMovieBasicByIdCompleted(this, new GetMovieBasicByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMovieDetailedById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebMovieDetailed GetMovieDetailedById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetMovieDetailedById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebMovieDetailed)(results[0]));
        }
        
        /// <remarks/>
        public void GetMovieDetailedByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetMovieDetailedByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetMovieDetailedByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetMovieDetailedByIdOperationCompleted == null)) {
                this.GetMovieDetailedByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMovieDetailedByIdOperationCompleted);
            }
            this.InvokeAsync("GetMovieDetailedById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetMovieDetailedByIdOperationCompleted, userState);
        }
        
        private void OnGetMovieDetailedByIdOperationCompleted(object arg) {
            if ((this.GetMovieDetailedByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMovieDetailedByIdCompleted(this, new GetMovieDetailedByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllMovieGenres", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebGenre[] GetAllMovieGenres([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllMovieGenres", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebGenre[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMovieGenresAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllMovieGenresAsync(provider, providerSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllMovieGenresAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllMovieGenresOperationCompleted == null)) {
                this.GetAllMovieGenresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMovieGenresOperationCompleted);
            }
            this.InvokeAsync("GetAllMovieGenres", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllMovieGenresOperationCompleted, userState);
        }
        
        private void OnGetAllMovieGenresOperationCompleted(object arg) {
            if ((this.GetAllMovieGenresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMovieGenresCompleted(this, new GetAllMovieGenresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMovieGenresByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebGenre[] GetMovieGenresByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetMovieGenresByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebGenre[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMovieGenresByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetMovieGenresByRangeAsync(provider, providerSpecified, start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetMovieGenresByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetMovieGenresByRangeOperationCompleted == null)) {
                this.GetMovieGenresByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMovieGenresByRangeOperationCompleted);
            }
            this.InvokeAsync("GetMovieGenresByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetMovieGenresByRangeOperationCompleted, userState);
        }
        
        private void OnGetMovieGenresByRangeOperationCompleted(object arg) {
            if ((this.GetMovieGenresByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMovieGenresByRangeCompleted(this, new GetMovieGenresByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMovieGenresCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetMovieGenresCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified) {
            object[] results = this.Invoke("GetMovieGenresCount", new object[] {
                        provider,
                        providerSpecified});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetMovieGenresCountAsync(System.Nullable<int> provider, bool providerSpecified) {
            this.GetMovieGenresCountAsync(provider, providerSpecified, null);
        }
        
        /// <remarks/>
        public void GetMovieGenresCountAsync(System.Nullable<int> provider, bool providerSpecified, object userState) {
            if ((this.GetMovieGenresCountOperationCompleted == null)) {
                this.GetMovieGenresCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMovieGenresCountOperationCompleted);
            }
            this.InvokeAsync("GetMovieGenresCount", new object[] {
                        provider,
                        providerSpecified}, this.GetMovieGenresCountOperationCompleted, userState);
        }
        
        private void OnGetMovieGenresCountOperationCompleted(object arg) {
            if ((this.GetMovieGenresCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMovieGenresCountCompleted(this, new GetMovieGenresCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllMovieCategories", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebCategory[] GetAllMovieCategories([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllMovieCategories", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMovieCategoriesAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllMovieCategoriesAsync(provider, providerSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllMovieCategoriesAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllMovieCategoriesOperationCompleted == null)) {
                this.GetAllMovieCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMovieCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetAllMovieCategories", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllMovieCategoriesOperationCompleted, userState);
        }
        
        private void OnGetAllMovieCategoriesOperationCompleted(object arg) {
            if ((this.GetAllMovieCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMovieCategoriesCompleted(this, new GetAllMovieCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllMovieActors", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebActor[] GetAllMovieActors([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllMovieActors", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebActor[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMovieActorsAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllMovieActorsAsync(provider, providerSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllMovieActorsAsync(System.Nullable<int> provider, bool providerSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllMovieActorsOperationCompleted == null)) {
                this.GetAllMovieActorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMovieActorsOperationCompleted);
            }
            this.InvokeAsync("GetAllMovieActors", new object[] {
                        provider,
                        providerSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllMovieActorsOperationCompleted, userState);
        }
        
        private void OnGetAllMovieActorsOperationCompleted(object arg) {
            if ((this.GetAllMovieActorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMovieActorsCompleted(this, new GetAllMovieActorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMovieActorsByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebActor[] GetMovieActorsByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetMovieActorsByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebActor[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMovieActorsByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetMovieActorsByRangeAsync(provider, providerSpecified, start, startSpecified, end, endSpecified, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetMovieActorsByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetMovieActorsByRangeOperationCompleted == null)) {
                this.GetMovieActorsByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMovieActorsByRangeOperationCompleted);
            }
            this.InvokeAsync("GetMovieActorsByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetMovieActorsByRangeOperationCompleted, userState);
        }
        
        private void OnGetMovieActorsByRangeOperationCompleted(object arg) {
            if ((this.GetMovieActorsByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMovieActorsByRangeCompleted(this, new GetMovieActorsByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMovieActorCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetMovieActorCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified) {
            object[] results = this.Invoke("GetMovieActorCount", new object[] {
                        provider,
                        providerSpecified});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetMovieActorCountAsync(System.Nullable<int> provider, bool providerSpecified) {
            this.GetMovieActorCountAsync(provider, providerSpecified, null);
        }
        
        /// <remarks/>
        public void GetMovieActorCountAsync(System.Nullable<int> provider, bool providerSpecified, object userState) {
            if ((this.GetMovieActorCountOperationCompleted == null)) {
                this.GetMovieActorCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMovieActorCountOperationCompleted);
            }
            this.InvokeAsync("GetMovieActorCount", new object[] {
                        provider,
                        providerSpecified}, this.GetMovieActorCountOperationCompleted, userState);
        }
        
        private void OnGetMovieActorCountOperationCompleted(object arg) {
            if ((this.GetMovieActorCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMovieActorCountCompleted(this, new GetMovieActorCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicAlbumCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetMusicAlbumCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string category) {
            object[] results = this.Invoke("GetMusicAlbumCount", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        category});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicAlbumCountAsync(System.Nullable<int> provider, bool providerSpecified, string genre, string category) {
            this.GetMusicAlbumCountAsync(provider, providerSpecified, genre, category, null);
        }
        
        /// <remarks/>
        public void GetMusicAlbumCountAsync(System.Nullable<int> provider, bool providerSpecified, string genre, string category, object userState) {
            if ((this.GetMusicAlbumCountOperationCompleted == null)) {
                this.GetMusicAlbumCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicAlbumCountOperationCompleted);
            }
            this.InvokeAsync("GetMusicAlbumCount", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        category}, this.GetMusicAlbumCountOperationCompleted, userState);
        }
        
        private void OnGetMusicAlbumCountOperationCompleted(object arg) {
            if ((this.GetMusicAlbumCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicAlbumCountCompleted(this, new GetMusicAlbumCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetAllMusicAlbumsBasic", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Music")]
        public WebMusicAlbumBasic[] GetAllMusicAlbumsBasic([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetAllMusicAlbumsBasic", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebMusicAlbumBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMusicAlbumsBasicAsync(System.Nullable<int> provider, bool providerSpecified, string genre, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetAllMusicAlbumsBasicAsync(provider, providerSpecified, genre, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllMusicAlbumsBasicAsync(System.Nullable<int> provider, bool providerSpecified, string genre, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetAllMusicAlbumsBasicOperationCompleted == null)) {
                this.GetAllMusicAlbumsBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMusicAlbumsBasicOperationCompleted);
            }
            this.InvokeAsync("GetAllMusicAlbumsBasic", new object[] {
                        provider,
                        providerSpecified,
                        genre,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetAllMusicAlbumsBasicOperationCompleted, userState);
        }
        
        private void OnGetAllMusicAlbumsBasicOperationCompleted(object arg) {
            if ((this.GetAllMusicAlbumsBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMusicAlbumsBasicCompleted(this, new GetAllMusicAlbumsBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicAlbumsBasicByRange", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Music")]
        public WebMusicAlbumBasic[] GetMusicAlbumsBasicByRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, int start, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, int end, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genre, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetMusicAlbumsBasicByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        genre,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebMusicAlbumBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicAlbumsBasicByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, string genre, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetMusicAlbumsBasicByRangeAsync(provider, providerSpecified, start, startSpecified, end, endSpecified, genre, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetMusicAlbumsBasicByRangeAsync(System.Nullable<int> provider, bool providerSpecified, int start, bool startSpecified, int end, bool endSpecified, string genre, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetMusicAlbumsBasicByRangeOperationCompleted == null)) {
                this.GetMusicAlbumsBasicByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicAlbumsBasicByRangeOperationCompleted);
            }
            this.InvokeAsync("GetMusicAlbumsBasicByRange", new object[] {
                        provider,
                        providerSpecified,
                        start,
                        startSpecified,
                        end,
                        endSpecified,
                        genre,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetMusicAlbumsBasicByRangeOperationCompleted, userState);
        }
        
        private void OnGetMusicAlbumsBasicByRangeOperationCompleted(object arg) {
            if ((this.GetMusicAlbumsBasicByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicAlbumsBasicByRangeCompleted(this, new GetMusicAlbumsBasicByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicAlbumsBasicForArtist", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces.Music")]
        public WebMusicAlbumBasic[] GetMusicAlbumsBasicForArtist([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<SortBy> sort, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sortSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<OrderBy> order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified) {
            object[] results = this.Invoke("GetMusicAlbumsBasicForArtist", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified});
            return ((WebMusicAlbumBasic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicAlbumsBasicForArtistAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified) {
            this.GetMusicAlbumsBasicForArtistAsync(provider, providerSpecified, id, sort, sortSpecified, order, orderSpecified, null);
        }
        
        /// <remarks/>
        public void GetMusicAlbumsBasicForArtistAsync(System.Nullable<int> provider, bool providerSpecified, string id, System.Nullable<SortBy> sort, bool sortSpecified, System.Nullable<OrderBy> order, bool orderSpecified, object userState) {
            if ((this.GetMusicAlbumsBasicForArtistOperationCompleted == null)) {
                this.GetMusicAlbumsBasicForArtistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicAlbumsBasicForArtistOperationCompleted);
            }
            this.InvokeAsync("GetMusicAlbumsBasicForArtist", new object[] {
                        provider,
                        providerSpecified,
                        id,
                        sort,
                        sortSpecified,
                        order,
                        orderSpecified}, this.GetMusicAlbumsBasicForArtistOperationCompleted, userState);
        }
        
        private void OnGetMusicAlbumsBasicForArtistOperationCompleted(object arg) {
            if ((this.GetMusicAlbumsBasicForArtistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicAlbumsBasicForArtistCompleted(this, new GetMusicAlbumsBasicForArtistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicAlbumBasicById", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebMusicAlbumBasic GetMusicAlbumBasicById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetMusicAlbumBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id});
            return ((WebMusicAlbumBasic)(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicAlbumBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id) {
            this.GetMusicAlbumBasicByIdAsync(provider, providerSpecified, id, null);
        }
        
        /// <remarks/>
        public void GetMusicAlbumBasicByIdAsync(System.Nullable<int> provider, bool providerSpecified, string id, object userState) {
            if ((this.GetMusicAlbumBasicByIdOperationCompleted == null)) {
                this.GetMusicAlbumBasicByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicAlbumBasicByIdOperationCompleted);
            }
            this.InvokeAsync("GetMusicAlbumBasicById", new object[] {
                        provider,
                        providerSpecified,
                        id}, this.GetMusicAlbumBasicByIdOperationCompleted, userState);
        }
        
        private void OnGetMusicAlbumBasicByIdOperationCompleted(object arg) {
            if ((this.GetMusicAlbumBasicByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicAlbumBasicByIdCompleted(this, new GetMusicAlbumBasicByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mpextended.github.com/IMediaAccessService/GetMusicArtistCount", RequestNamespace="http://mpextended.github.com", ResponseNamespace="http://mpextended.github.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public WebItemCount GetMusicArtistCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> provider, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool providerSpecified) {
            object[] results = this.Invoke("GetMusicArtistCount", new object[] {
                        provider,
                        providerSpecified});
            return ((WebItemCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetMusicArtistCountAsync(System.Nullable<int> provider, bool providerSpecified) {
            this.GetMusicArtistCountAsync(provider, providerSpecified, null);
        }
        
        /// <remarks/>
        public void GetMusicArtistCountAsync(System.Nullable<int> provider, bool providerSpecified, object userState) {
            if ((this.GetMusicArtistCountOperationCompleted == null)) {
                this.GetMusicArtistCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMusicArtistCountOperationCompleted);
            }
            this.InvokeAsync("GetMusicArtistCount", new object[] {
                        provider,
                        providerSpecified}, this.GetMusicArtistCountOperationCompleted, userState);
        }
        
        private void OnGetMusicArtistCountOperationCompleted(object arg) {
            if ((this.GetMusicArtistCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMusicArtistCountCompleted(this, new GetMusicArtistCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.FileSystem")]
    public partial class WebFolderBasic : WebFilesystemItem {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebDriveBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebFileBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebFolderBasic))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.FileSystem")]
    public partial class WebFilesystemItem : WebMediaItem {
        
        private System.DateTime lastAccessTimeField;
        
        private bool lastAccessTimeFieldSpecified;
        
        private System.DateTime lastModifiedTimeField;
        
        private bool lastModifiedTimeFieldSpecified;
        
        private string titleField;
        
        /// <remarks/>
        public System.DateTime LastAccessTime {
            get {
                return this.lastAccessTimeField;
            }
            set {
                this.lastAccessTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastAccessTimeSpecified {
            get {
                return this.lastAccessTimeFieldSpecified;
            }
            set {
                this.lastAccessTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModifiedTime {
            get {
                return this.lastModifiedTimeField;
            }
            set {
                this.lastModifiedTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastModifiedTimeSpecified {
            get {
                return this.lastModifiedTimeFieldSpecified;
            }
            set {
                this.lastModifiedTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebFilesystemItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebDriveBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebFileBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebFolderBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebMovieBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebMovieDetailed))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebMusicTrackBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebMusicTrackDetailed))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebPictureBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebPictureDetailed))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebTVEpisodeBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebTVEpisodeDetailed))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public partial class WebMediaItem : WebObject {
        
        private System.DateTime dateAddedField;
        
        private bool dateAddedFieldSpecified;
        
        private string idField;
        
        private string[] pathField;
        
        private WebMediaType typeField;
        
        private bool typeFieldSpecified;
        
        /// <remarks/>
        public System.DateTime DateAdded {
            get {
                return this.dateAddedField;
            }
            set {
                this.dateAddedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateAddedSpecified {
            get {
                return this.dateAddedFieldSpecified;
            }
            set {
                this.dateAddedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public WebMediaType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public enum WebMediaType {
        
        /// <remarks/>
        Movie,
        
        /// <remarks/>
        MusicTrack,
        
        /// <remarks/>
        Picture,
        
        /// <remarks/>
        TVEpisode,
        
        /// <remarks/>
        File,
        
        /// <remarks/>
        TVShow,
        
        /// <remarks/>
        TVSeason,
        
        /// <remarks/>
        MusicAlbum,
        
        /// <remarks/>
        MusicArtist,
        
        /// <remarks/>
        Folder,
        
        /// <remarks/>
        Drive,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebSearchResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebGenre))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebFileInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebCategory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebMediaItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebFilesystemItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebDriveBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebFileBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebFolderBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebMovieBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebMovieDetailed))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebMusicTrackBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebMusicTrackDetailed))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebPictureBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebPictureDetailed))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebTVEpisodeBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebTVEpisodeDetailed))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebMusicAlbumBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebMusicArtistBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebMusicArtistDetailed))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebTVSeasonBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebTVSeasonDetailed))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebActor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebTVShowBasic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebTVShowDetailed))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public partial class WebObject {
        
        private int pIDField;
        
        private bool pIDFieldSpecified;
        
        /// <remarks/>
        public int PID {
            get {
                return this.pIDField;
            }
            set {
                this.pIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PIDSpecified {
            get {
                return this.pIDFieldSpecified;
            }
            set {
                this.pIDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public partial class WebBackendProvider {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string nameField;
        
        private string versionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public partial class WebMediaServiceDescription {
        
        private WebBackendProvider[] availableFileSystemLibrariesField;
        
        private WebBackendProvider[] availableMovieLibrariesField;
        
        private WebBackendProvider[] availableMusicLibrariesField;
        
        private WebBackendProvider[] availablePictureLibrariesField;
        
        private WebBackendProvider[] availableTvShowLibrariesField;
        
        private int defaultFileSystemLibraryField;
        
        private bool defaultFileSystemLibraryFieldSpecified;
        
        private int defaultMovieLibraryField;
        
        private bool defaultMovieLibraryFieldSpecified;
        
        private int defaultMusicLibraryField;
        
        private bool defaultMusicLibraryFieldSpecified;
        
        private int defaultPictureLibraryField;
        
        private bool defaultPictureLibraryFieldSpecified;
        
        private int defaultTvShowLibraryField;
        
        private bool defaultTvShowLibraryFieldSpecified;
        
        private int filesystemApiVersionField;
        
        private bool filesystemApiVersionFieldSpecified;
        
        private int movieApiVersionField;
        
        private bool movieApiVersionFieldSpecified;
        
        private int musicApiVersionField;
        
        private bool musicApiVersionFieldSpecified;
        
        private int picturesApiVersionField;
        
        private bool picturesApiVersionFieldSpecified;
        
        private string serviceVersionField;
        
        private int tvShowsApiVersionField;
        
        private bool tvShowsApiVersionFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WebBackendProvider[] AvailableFileSystemLibraries {
            get {
                return this.availableFileSystemLibrariesField;
            }
            set {
                this.availableFileSystemLibrariesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WebBackendProvider[] AvailableMovieLibraries {
            get {
                return this.availableMovieLibrariesField;
            }
            set {
                this.availableMovieLibrariesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WebBackendProvider[] AvailableMusicLibraries {
            get {
                return this.availableMusicLibrariesField;
            }
            set {
                this.availableMusicLibrariesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WebBackendProvider[] AvailablePictureLibraries {
            get {
                return this.availablePictureLibrariesField;
            }
            set {
                this.availablePictureLibrariesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WebBackendProvider[] AvailableTvShowLibraries {
            get {
                return this.availableTvShowLibrariesField;
            }
            set {
                this.availableTvShowLibrariesField = value;
            }
        }
        
        /// <remarks/>
        public int DefaultFileSystemLibrary {
            get {
                return this.defaultFileSystemLibraryField;
            }
            set {
                this.defaultFileSystemLibraryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultFileSystemLibrarySpecified {
            get {
                return this.defaultFileSystemLibraryFieldSpecified;
            }
            set {
                this.defaultFileSystemLibraryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DefaultMovieLibrary {
            get {
                return this.defaultMovieLibraryField;
            }
            set {
                this.defaultMovieLibraryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultMovieLibrarySpecified {
            get {
                return this.defaultMovieLibraryFieldSpecified;
            }
            set {
                this.defaultMovieLibraryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DefaultMusicLibrary {
            get {
                return this.defaultMusicLibraryField;
            }
            set {
                this.defaultMusicLibraryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultMusicLibrarySpecified {
            get {
                return this.defaultMusicLibraryFieldSpecified;
            }
            set {
                this.defaultMusicLibraryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DefaultPictureLibrary {
            get {
                return this.defaultPictureLibraryField;
            }
            set {
                this.defaultPictureLibraryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultPictureLibrarySpecified {
            get {
                return this.defaultPictureLibraryFieldSpecified;
            }
            set {
                this.defaultPictureLibraryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DefaultTvShowLibrary {
            get {
                return this.defaultTvShowLibraryField;
            }
            set {
                this.defaultTvShowLibraryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultTvShowLibrarySpecified {
            get {
                return this.defaultTvShowLibraryFieldSpecified;
            }
            set {
                this.defaultTvShowLibraryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int FilesystemApiVersion {
            get {
                return this.filesystemApiVersionField;
            }
            set {
                this.filesystemApiVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FilesystemApiVersionSpecified {
            get {
                return this.filesystemApiVersionFieldSpecified;
            }
            set {
                this.filesystemApiVersionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MovieApiVersion {
            get {
                return this.movieApiVersionField;
            }
            set {
                this.movieApiVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MovieApiVersionSpecified {
            get {
                return this.movieApiVersionFieldSpecified;
            }
            set {
                this.movieApiVersionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MusicApiVersion {
            get {
                return this.musicApiVersionField;
            }
            set {
                this.musicApiVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MusicApiVersionSpecified {
            get {
                return this.musicApiVersionFieldSpecified;
            }
            set {
                this.musicApiVersionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int PicturesApiVersion {
            get {
                return this.picturesApiVersionField;
            }
            set {
                this.picturesApiVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PicturesApiVersionSpecified {
            get {
                return this.picturesApiVersionFieldSpecified;
            }
            set {
                this.picturesApiVersionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ServiceVersion {
            get {
                return this.serviceVersionField;
            }
            set {
                this.serviceVersionField = value;
            }
        }
        
        /// <remarks/>
        public int TvShowsApiVersion {
            get {
                return this.tvShowsApiVersionField;
            }
            set {
                this.tvShowsApiVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TvShowsApiVersionSpecified {
            get {
                return this.tvShowsApiVersionFieldSpecified;
            }
            set {
                this.tvShowsApiVersionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public partial class WebItemCount {
        
        private int countField;
        
        private bool countFieldSpecified;
        
        /// <remarks/>
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CountSpecified {
            get {
                return this.countFieldSpecified;
            }
            set {
                this.countFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public partial class SerializableDictionaryOfstring {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlQualifiedName factoryTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://schemas.microsoft.com/2003/10/Serialization/")]
        public System.Xml.XmlQualifiedName FactoryType {
            get {
                return this.factoryTypeField;
            }
            set {
                this.factoryTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public partial class WebExternalId {
        
        private string idField;
        
        private string siteField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Site {
            get {
                return this.siteField;
            }
            set {
                this.siteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebArtworkDetailed))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public partial class WebArtwork {
        
        private string filetypeField;
        
        private string idField;
        
        private int offsetField;
        
        private bool offsetFieldSpecified;
        
        private int ratingField;
        
        private bool ratingFieldSpecified;
        
        private WebFileType typeField;
        
        private bool typeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Filetype {
            get {
                return this.filetypeField;
            }
            set {
                this.filetypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Offset {
            get {
                return this.offsetField;
            }
            set {
                this.offsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetSpecified {
            get {
                return this.offsetFieldSpecified;
            }
            set {
                this.offsetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RatingSpecified {
            get {
                return this.ratingFieldSpecified;
            }
            set {
                this.ratingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public WebFileType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public enum WebFileType {
        
        /// <remarks/>
        Content,
        
        /// <remarks/>
        Backdrop,
        
        /// <remarks/>
        Banner,
        
        /// <remarks/>
        Poster,
        
        /// <remarks/>
        Cover,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public partial class WebArtworkDetailed : WebArtwork {
        
        private string pathField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public partial class WebSearchResult : WebObject {
        
        private SerializableDictionaryOfstring detailsField;
        
        private string idField;
        
        private int scoreField;
        
        private bool scoreFieldSpecified;
        
        private string titleField;
        
        private WebMediaType typeField;
        
        private bool typeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SerializableDictionaryOfstring Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Score {
            get {
                return this.scoreField;
            }
            set {
                this.scoreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScoreSpecified {
            get {
                return this.scoreFieldSpecified;
            }
            set {
                this.scoreFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public WebMediaType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public partial class WebGenre : WebObject {
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public partial class WebFileInfo : WebObject {
        
        private bool existsField;
        
        private bool existsFieldSpecified;
        
        private string extensionField;
        
        private bool isLocalFileField;
        
        private bool isLocalFileFieldSpecified;
        
        private bool isReadOnlyField;
        
        private bool isReadOnlyFieldSpecified;
        
        private System.DateTime lastAccessTimeField;
        
        private bool lastAccessTimeFieldSpecified;
        
        private System.DateTime lastModifiedTimeField;
        
        private bool lastModifiedTimeFieldSpecified;
        
        private string nameField;
        
        private bool onNetworkDriveField;
        
        private bool onNetworkDriveFieldSpecified;
        
        private string pathField;
        
        private long sizeField;
        
        private bool sizeFieldSpecified;
        
        /// <remarks/>
        public bool Exists {
            get {
                return this.existsField;
            }
            set {
                this.existsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExistsSpecified {
            get {
                return this.existsFieldSpecified;
            }
            set {
                this.existsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLocalFile {
            get {
                return this.isLocalFileField;
            }
            set {
                this.isLocalFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsLocalFileSpecified {
            get {
                return this.isLocalFileFieldSpecified;
            }
            set {
                this.isLocalFileFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsReadOnly {
            get {
                return this.isReadOnlyField;
            }
            set {
                this.isReadOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsReadOnlySpecified {
            get {
                return this.isReadOnlyFieldSpecified;
            }
            set {
                this.isReadOnlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastAccessTime {
            get {
                return this.lastAccessTimeField;
            }
            set {
                this.lastAccessTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastAccessTimeSpecified {
            get {
                return this.lastAccessTimeFieldSpecified;
            }
            set {
                this.lastAccessTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModifiedTime {
            get {
                return this.lastModifiedTimeField;
            }
            set {
                this.lastModifiedTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastModifiedTimeSpecified {
            get {
                return this.lastModifiedTimeFieldSpecified;
            }
            set {
                this.lastModifiedTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool OnNetworkDrive {
            get {
                return this.onNetworkDriveField;
            }
            set {
                this.onNetworkDriveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnNetworkDriveSpecified {
            get {
                return this.onNetworkDriveFieldSpecified;
            }
            set {
                this.onNetworkDriveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeSpecified {
            get {
                return this.sizeFieldSpecified;
            }
            set {
                this.sizeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public partial class WebCategory : WebObject {
        
        private string idField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.Music")]
    public partial class WebMusicAlbumBasic : WebObject {
        
        private string albumArtistField;
        
        private string albumArtistIdField;
        
        private string[] artistsField;
        
        private string[] artistsIdField;
        
        private WebArtwork[] artworkField;
        
        private string[] composerField;
        
        private System.DateTime dateAddedField;
        
        private bool dateAddedFieldSpecified;
        
        private string[] genresField;
        
        private string idField;
        
        private float ratingField;
        
        private bool ratingFieldSpecified;
        
        private string titleField;
        
        private int yearField;
        
        private bool yearFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AlbumArtist {
            get {
                return this.albumArtistField;
            }
            set {
                this.albumArtistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AlbumArtistId {
            get {
                return this.albumArtistIdField;
            }
            set {
                this.albumArtistIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Artists {
            get {
                return this.artistsField;
            }
            set {
                this.artistsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] ArtistsId {
            get {
                return this.artistsIdField;
            }
            set {
                this.artistsIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebArtwork[] Artwork {
            get {
                return this.artworkField;
            }
            set {
                this.artworkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Composer {
            get {
                return this.composerField;
            }
            set {
                this.composerField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateAdded {
            get {
                return this.dateAddedField;
            }
            set {
                this.dateAddedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateAddedSpecified {
            get {
                return this.dateAddedFieldSpecified;
            }
            set {
                this.dateAddedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Genres {
            get {
                return this.genresField;
            }
            set {
                this.genresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public float Rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RatingSpecified {
            get {
                return this.ratingFieldSpecified;
            }
            set {
                this.ratingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int Year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YearSpecified {
            get {
                return this.yearFieldSpecified;
            }
            set {
                this.yearFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebMusicArtistDetailed))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.Music")]
    public partial class WebMusicArtistBasic : WebObject {
        
        private WebArtwork[] artworkField;
        
        private string idField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebArtwork[] Artwork {
            get {
                return this.artworkField;
            }
            set {
                this.artworkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.Music")]
    public partial class WebMusicArtistDetailed : WebMusicArtistBasic {
        
        private string biographyField;
        
        private string stylesField;
        
        private string tonesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Biography {
            get {
                return this.biographyField;
            }
            set {
                this.biographyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Styles {
            get {
                return this.stylesField;
            }
            set {
                this.stylesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Tones {
            get {
                return this.tonesField;
            }
            set {
                this.tonesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebTVSeasonDetailed))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.TVShow")]
    public partial class WebTVSeasonBasic : WebObject {
        
        private WebArtwork[] artworkField;
        
        private System.DateTime dateAddedField;
        
        private bool dateAddedFieldSpecified;
        
        private int episodeCountField;
        
        private bool episodeCountFieldSpecified;
        
        private string idField;
        
        private bool isProtectedField;
        
        private bool isProtectedFieldSpecified;
        
        private int seasonNumberField;
        
        private bool seasonNumberFieldSpecified;
        
        private string showIdField;
        
        private string titleField;
        
        private int unwatchedEpisodeCountField;
        
        private bool unwatchedEpisodeCountFieldSpecified;
        
        private int yearField;
        
        private bool yearFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebArtwork[] Artwork {
            get {
                return this.artworkField;
            }
            set {
                this.artworkField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateAdded {
            get {
                return this.dateAddedField;
            }
            set {
                this.dateAddedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateAddedSpecified {
            get {
                return this.dateAddedFieldSpecified;
            }
            set {
                this.dateAddedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int EpisodeCount {
            get {
                return this.episodeCountField;
            }
            set {
                this.episodeCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EpisodeCountSpecified {
            get {
                return this.episodeCountFieldSpecified;
            }
            set {
                this.episodeCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public bool IsProtected {
            get {
                return this.isProtectedField;
            }
            set {
                this.isProtectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsProtectedSpecified {
            get {
                return this.isProtectedFieldSpecified;
            }
            set {
                this.isProtectedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int SeasonNumber {
            get {
                return this.seasonNumberField;
            }
            set {
                this.seasonNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeasonNumberSpecified {
            get {
                return this.seasonNumberFieldSpecified;
            }
            set {
                this.seasonNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShowId {
            get {
                return this.showIdField;
            }
            set {
                this.showIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int UnwatchedEpisodeCount {
            get {
                return this.unwatchedEpisodeCountField;
            }
            set {
                this.unwatchedEpisodeCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnwatchedEpisodeCountSpecified {
            get {
                return this.unwatchedEpisodeCountFieldSpecified;
            }
            set {
                this.unwatchedEpisodeCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YearSpecified {
            get {
                return this.yearFieldSpecified;
            }
            set {
                this.yearFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.TVShow")]
    public partial class WebTVSeasonDetailed : WebTVSeasonBasic {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public partial class WebActor : WebObject {
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebTVShowDetailed))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.TVShow")]
    public partial class WebTVShowBasic : WebObject {
        
        private WebActor[] actorsField;
        
        private WebArtwork[] artworkField;
        
        private string contentRatingField;
        
        private System.DateTime dateAddedField;
        
        private bool dateAddedFieldSpecified;
        
        private int episodeCountField;
        
        private bool episodeCountFieldSpecified;
        
        private WebExternalId[] externalIdField;
        
        private string[] genresField;
        
        private string idField;
        
        private bool isProtectedField;
        
        private bool isProtectedFieldSpecified;
        
        private float ratingField;
        
        private bool ratingFieldSpecified;
        
        private string titleField;
        
        private int unwatchedEpisodeCountField;
        
        private bool unwatchedEpisodeCountFieldSpecified;
        
        private int yearField;
        
        private bool yearFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebActor[] Actors {
            get {
                return this.actorsField;
            }
            set {
                this.actorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebArtwork[] Artwork {
            get {
                return this.artworkField;
            }
            set {
                this.artworkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContentRating {
            get {
                return this.contentRatingField;
            }
            set {
                this.contentRatingField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateAdded {
            get {
                return this.dateAddedField;
            }
            set {
                this.dateAddedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateAddedSpecified {
            get {
                return this.dateAddedFieldSpecified;
            }
            set {
                this.dateAddedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int EpisodeCount {
            get {
                return this.episodeCountField;
            }
            set {
                this.episodeCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EpisodeCountSpecified {
            get {
                return this.episodeCountFieldSpecified;
            }
            set {
                this.episodeCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebExternalId[] ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Genres {
            get {
                return this.genresField;
            }
            set {
                this.genresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public bool IsProtected {
            get {
                return this.isProtectedField;
            }
            set {
                this.isProtectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsProtectedSpecified {
            get {
                return this.isProtectedFieldSpecified;
            }
            set {
                this.isProtectedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float Rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RatingSpecified {
            get {
                return this.ratingFieldSpecified;
            }
            set {
                this.ratingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int UnwatchedEpisodeCount {
            get {
                return this.unwatchedEpisodeCountField;
            }
            set {
                this.unwatchedEpisodeCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnwatchedEpisodeCountSpecified {
            get {
                return this.unwatchedEpisodeCountFieldSpecified;
            }
            set {
                this.unwatchedEpisodeCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YearSpecified {
            get {
                return this.yearFieldSpecified;
            }
            set {
                this.yearFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.TVShow")]
    public partial class WebTVShowDetailed : WebTVShowBasic {
        
        private string airsDayField;
        
        private string airsTimeField;
        
        private string networkField;
        
        private int runtimeField;
        
        private bool runtimeFieldSpecified;
        
        private string statusField;
        
        private string summaryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AirsDay {
            get {
                return this.airsDayField;
            }
            set {
                this.airsDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AirsTime {
            get {
                return this.airsTimeField;
            }
            set {
                this.airsTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
            }
        }
        
        /// <remarks/>
        public int Runtime {
            get {
                return this.runtimeField;
            }
            set {
                this.runtimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RuntimeSpecified {
            get {
                return this.runtimeFieldSpecified;
            }
            set {
                this.runtimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebMovieDetailed))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.Movie")]
    public partial class WebMovieBasic : WebMediaItem {
        
        private WebActor[] actorsField;
        
        private WebArtwork[] artworkField;
        
        private WebExternalId[] externalIdField;
        
        private string[] genresField;
        
        private bool isProtectedField;
        
        private bool isProtectedFieldSpecified;
        
        private float ratingField;
        
        private bool ratingFieldSpecified;
        
        private int runtimeField;
        
        private bool runtimeFieldSpecified;
        
        private string titleField;
        
        private int yearField;
        
        private bool yearFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebActor[] Actors {
            get {
                return this.actorsField;
            }
            set {
                this.actorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebArtwork[] Artwork {
            get {
                return this.artworkField;
            }
            set {
                this.artworkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebExternalId[] ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Genres {
            get {
                return this.genresField;
            }
            set {
                this.genresField = value;
            }
        }
        
        /// <remarks/>
        public bool IsProtected {
            get {
                return this.isProtectedField;
            }
            set {
                this.isProtectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsProtectedSpecified {
            get {
                return this.isProtectedFieldSpecified;
            }
            set {
                this.isProtectedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float Rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RatingSpecified {
            get {
                return this.ratingFieldSpecified;
            }
            set {
                this.ratingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Runtime {
            get {
                return this.runtimeField;
            }
            set {
                this.runtimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RuntimeSpecified {
            get {
                return this.runtimeFieldSpecified;
            }
            set {
                this.runtimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int Year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YearSpecified {
            get {
                return this.yearFieldSpecified;
            }
            set {
                this.yearFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.Movie")]
    public partial class WebMovieDetailed : WebMovieBasic {
        
        private string[] directorsField;
        
        private string languageField;
        
        private string summaryField;
        
        private string taglineField;
        
        private string[] writersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Directors {
            get {
                return this.directorsField;
            }
            set {
                this.directorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Tagline {
            get {
                return this.taglineField;
            }
            set {
                this.taglineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Writers {
            get {
                return this.writersField;
            }
            set {
                this.writersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebMusicTrackDetailed))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.Music")]
    public partial class WebMusicTrackBasic : WebMediaItem {
        
        private string albumField;
        
        private string albumIdField;
        
        private string[] artistField;
        
        private string[] artistIdField;
        
        private int durationField;
        
        private bool durationFieldSpecified;
        
        private string[] genresField;
        
        private float ratingField;
        
        private bool ratingFieldSpecified;
        
        private string titleField;
        
        private int trackNumberField;
        
        private bool trackNumberFieldSpecified;
        
        private int yearField;
        
        private bool yearFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Album {
            get {
                return this.albumField;
            }
            set {
                this.albumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AlbumId {
            get {
                return this.albumIdField;
            }
            set {
                this.albumIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Artist {
            get {
                return this.artistField;
            }
            set {
                this.artistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] ArtistId {
            get {
                return this.artistIdField;
            }
            set {
                this.artistIdField = value;
            }
        }
        
        /// <remarks/>
        public int Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DurationSpecified {
            get {
                return this.durationFieldSpecified;
            }
            set {
                this.durationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Genres {
            get {
                return this.genresField;
            }
            set {
                this.genresField = value;
            }
        }
        
        /// <remarks/>
        public float Rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RatingSpecified {
            get {
                return this.ratingFieldSpecified;
            }
            set {
                this.ratingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int TrackNumber {
            get {
                return this.trackNumberField;
            }
            set {
                this.trackNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrackNumberSpecified {
            get {
                return this.trackNumberFieldSpecified;
            }
            set {
                this.trackNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YearSpecified {
            get {
                return this.yearFieldSpecified;
            }
            set {
                this.yearFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.Music")]
    public partial class WebMusicTrackDetailed : WebMusicTrackBasic {
        
        private WebMusicArtistBasic[] artistsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public WebMusicArtistBasic[] Artists {
            get {
                return this.artistsField;
            }
            set {
                this.artistsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebPictureDetailed))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.Picture")]
    public partial class WebPictureBasic : WebMediaItem {
        
        private WebCategory[] categoriesField;
        
        private System.DateTime dateTakenField;
        
        private bool dateTakenFieldSpecified;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebCategory[] Categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTaken {
            get {
                return this.dateTakenField;
            }
            set {
                this.dateTakenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateTakenSpecified {
            get {
                return this.dateTakenFieldSpecified;
            }
            set {
                this.dateTakenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.Picture")]
    public partial class WebPictureDetailed : WebPictureBasic {
        
        private string authorField;
        
        private string cameraManufacturerField;
        
        private string cameraModelField;
        
        private string commentField;
        
        private string copyrightField;
        
        private string dpiField;
        
        private string heightField;
        
        private double mpixelField;
        
        private bool mpixelFieldSpecified;
        
        private float ratingField;
        
        private bool ratingFieldSpecified;
        
        private string subjectField;
        
        private string widthField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CameraManufacturer {
            get {
                return this.cameraManufacturerField;
            }
            set {
                this.cameraManufacturerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CameraModel {
            get {
                return this.cameraModelField;
            }
            set {
                this.cameraModelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Copyright {
            get {
                return this.copyrightField;
            }
            set {
                this.copyrightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Dpi {
            get {
                return this.dpiField;
            }
            set {
                this.dpiField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public double Mpixel {
            get {
                return this.mpixelField;
            }
            set {
                this.mpixelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MpixelSpecified {
            get {
                return this.mpixelFieldSpecified;
            }
            set {
                this.mpixelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float Rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RatingSpecified {
            get {
                return this.ratingFieldSpecified;
            }
            set {
                this.ratingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebTVEpisodeDetailed))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.TVShow")]
    public partial class WebTVEpisodeBasic : WebMediaItem {
        
        private WebArtwork[] artworkField;
        
        private int episodeNumberField;
        
        private bool episodeNumberFieldSpecified;
        
        private WebExternalId[] externalIdField;
        
        private System.DateTime firstAiredField;
        
        private bool firstAiredFieldSpecified;
        
        private bool isProtectedField;
        
        private bool isProtectedFieldSpecified;
        
        private float ratingField;
        
        private bool ratingFieldSpecified;
        
        private string seasonIdField;
        
        private int seasonNumberField;
        
        private bool seasonNumberFieldSpecified;
        
        private string showIdField;
        
        private string titleField;
        
        private bool watchedField;
        
        private bool watchedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebArtwork[] Artwork {
            get {
                return this.artworkField;
            }
            set {
                this.artworkField = value;
            }
        }
        
        /// <remarks/>
        public int EpisodeNumber {
            get {
                return this.episodeNumberField;
            }
            set {
                this.episodeNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EpisodeNumberSpecified {
            get {
                return this.episodeNumberFieldSpecified;
            }
            set {
                this.episodeNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
            "terfaces")]
        public WebExternalId[] ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FirstAired {
            get {
                return this.firstAiredField;
            }
            set {
                this.firstAiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FirstAiredSpecified {
            get {
                return this.firstAiredFieldSpecified;
            }
            set {
                this.firstAiredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsProtected {
            get {
                return this.isProtectedField;
            }
            set {
                this.isProtectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsProtectedSpecified {
            get {
                return this.isProtectedFieldSpecified;
            }
            set {
                this.isProtectedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float Rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RatingSpecified {
            get {
                return this.ratingFieldSpecified;
            }
            set {
                this.ratingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SeasonId {
            get {
                return this.seasonIdField;
            }
            set {
                this.seasonIdField = value;
            }
        }
        
        /// <remarks/>
        public int SeasonNumber {
            get {
                return this.seasonNumberField;
            }
            set {
                this.seasonNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeasonNumberSpecified {
            get {
                return this.seasonNumberFieldSpecified;
            }
            set {
                this.seasonNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShowId {
            get {
                return this.showIdField;
            }
            set {
                this.showIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public bool Watched {
            get {
                return this.watchedField;
            }
            set {
                this.watchedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WatchedSpecified {
            get {
                return this.watchedFieldSpecified;
            }
            set {
                this.watchedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.TVShow")]
    public partial class WebTVEpisodeDetailed : WebTVEpisodeBasic {
        
        private string[] directorsField;
        
        private string[] guestStarsField;
        
        private string showField;
        
        private string summaryField;
        
        private string[] writersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Directors {
            get {
                return this.directorsField;
            }
            set {
                this.directorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] GuestStars {
            get {
                return this.guestStarsField;
            }
            set {
                this.guestStarsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Show {
            get {
                return this.showField;
            }
            set {
                this.showField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Writers {
            get {
                return this.writersField;
            }
            set {
                this.writersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.FileSystem")]
    public partial class WebDriveBasic : WebFilesystemItem {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces.FileSystem")]
    public partial class WebFileBasic : WebFilesystemItem {
        
        private long sizeField;
        
        private bool sizeFieldSpecified;
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeSpecified {
            get {
                return this.sizeFieldSpecified;
            }
            set {
                this.sizeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public enum SortBy {
        
        /// <remarks/>
        Title,
        
        /// <remarks/>
        DateAdded,
        
        /// <remarks/>
        Year,
        
        /// <remarks/>
        Genre,
        
        /// <remarks/>
        Rating,
        
        /// <remarks/>
        Categories,
        
        /// <remarks/>
        MusicTrackNumber,
        
        /// <remarks/>
        MusicComposer,
        
        /// <remarks/>
        TVEpisodeNumber,
        
        /// <remarks/>
        TVSeasonNumber,
        
        /// <remarks/>
        PictureDateTaken,
        
        /// <remarks/>
        TVDateAired,
        
        /// <remarks/>
        Type,
        
        /// <remarks/>
        Name,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MPExtended.Services.MediaAccessService.In" +
        "terfaces")]
    public enum OrderBy {
        
        /// <remarks/>
        Asc,
        
        /// <remarks/>
        Desc,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileSystemFolderBasicByIdCompletedEventHandler(object sender, GetFileSystemFolderBasicByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileSystemFolderBasicByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileSystemFolderBasicByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebFolderBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebFolderBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileSystemFileBasicByIdCompletedEventHandler(object sender, GetFileSystemFileBasicByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileSystemFileBasicByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileSystemFileBasicByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebFileBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebFileBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPathListCompletedEventHandler(object sender, GetPathListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPathListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPathListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileInfoCompletedEventHandler(object sender, GetFileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebFileInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebFileInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsLocalFileCompletedEventHandler(object sender, IsLocalFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsLocalFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsLocalFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool IsLocalFileResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool IsLocalFileResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RetrieveFileCompletedEventHandler(object sender, RetrieveFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVEpisodesDetailedForTVShowByRangeCompletedEventHandler(object sender, GetTVEpisodesDetailedForTVShowByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVEpisodesDetailedForTVShowByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVEpisodesDetailedForTVShowByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVEpisodeDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVEpisodeDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVEpisodesBasicForSeasonCompletedEventHandler(object sender, GetTVEpisodesBasicForSeasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVEpisodesBasicForSeasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVEpisodesBasicForSeasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVEpisodeBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVEpisodeBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVEpisodesDetailedForSeasonCompletedEventHandler(object sender, GetTVEpisodesDetailedForSeasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVEpisodesDetailedForSeasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVEpisodesDetailedForSeasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVEpisodeDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVEpisodeDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVEpisodeBasicByIdCompletedEventHandler(object sender, GetTVEpisodeBasicByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVEpisodeBasicByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVEpisodeBasicByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVEpisodeBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVEpisodeBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVEpisodeDetailedByIdCompletedEventHandler(object sender, GetTVEpisodeDetailedByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVEpisodeDetailedByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVEpisodeDetailedByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVEpisodeDetailed Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVEpisodeDetailed)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllTVShowCategoriesCompletedEventHandler(object sender, GetAllTVShowCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTVShowCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTVShowCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebCategory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllTVShowGenresCompletedEventHandler(object sender, GetAllTVShowGenresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTVShowGenresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTVShowGenresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebGenre[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebGenre[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVShowGenresByRangeCompletedEventHandler(object sender, GetTVShowGenresByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVShowGenresByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVShowGenresByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebGenre[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebGenre[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVShowGenresCountCompletedEventHandler(object sender, GetTVShowGenresCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVShowGenresCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVShowGenresCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllTVShowActorsCompletedEventHandler(object sender, GetAllTVShowActorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTVShowActorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTVShowActorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebActor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebActor[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVShowActorsByRangeCompletedEventHandler(object sender, GetTVShowActorsByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVShowActorsByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVShowActorsByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebActor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebActor[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVShowActorCountCompletedEventHandler(object sender, GetTVShowActorCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVShowActorCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVShowActorCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileSystemDriveCountCompletedEventHandler(object sender, GetFileSystemDriveCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileSystemDriveCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileSystemDriveCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllFileSystemDrivesCompletedEventHandler(object sender, GetAllFileSystemDrivesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllFileSystemDrivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllFileSystemDrivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebDriveBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebDriveBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileSystemDrivesByRangeCompletedEventHandler(object sender, GetFileSystemDrivesByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileSystemDrivesByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileSystemDrivesByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebDriveBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebDriveBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllFileSystemFoldersCompletedEventHandler(object sender, GetAllFileSystemFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllFileSystemFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllFileSystemFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebFolderBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebFolderBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileSystemFoldersByRangeCompletedEventHandler(object sender, GetFileSystemFoldersByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileSystemFoldersByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileSystemFoldersByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebFolderBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebFolderBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllFileSystemFilesCompletedEventHandler(object sender, GetAllFileSystemFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllFileSystemFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllFileSystemFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebFileBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebFileBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileSystemFilesByRangeCompletedEventHandler(object sender, GetFileSystemFilesByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileSystemFilesByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileSystemFilesByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebFileBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebFileBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllFileSystemFilesAndFoldersCompletedEventHandler(object sender, GetAllFileSystemFilesAndFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllFileSystemFilesAndFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllFileSystemFilesAndFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebFilesystemItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebFilesystemItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileSystemFilesAndFoldersByRangeCompletedEventHandler(object sender, GetFileSystemFilesAndFoldersByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileSystemFilesAndFoldersByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileSystemFilesAndFoldersByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebFilesystemItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebFilesystemItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileSystemFilesAndFoldersCountCompletedEventHandler(object sender, GetFileSystemFilesAndFoldersCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileSystemFilesAndFoldersCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileSystemFilesAndFoldersCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileSystemFilesCountCompletedEventHandler(object sender, GetFileSystemFilesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileSystemFilesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileSystemFilesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileSystemFoldersCountCompletedEventHandler(object sender, GetFileSystemFoldersCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileSystemFoldersCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileSystemFoldersCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileSystemDriveBasicByIdCompletedEventHandler(object sender, GetFileSystemDriveBasicByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileSystemDriveBasicByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileSystemDriveBasicByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebDriveBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebDriveBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPictureSubCategoriesCompletedEventHandler(object sender, GetPictureSubCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPictureSubCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPictureSubCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebCategory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPicturesBasicByCategoryCompletedEventHandler(object sender, GetPicturesBasicByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPicturesBasicByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPicturesBasicByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebPictureBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebPictureBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPicturesDetailedByCategoryCompletedEventHandler(object sender, GetPicturesDetailedByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPicturesDetailedByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPicturesDetailedByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebPictureDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebPictureDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVEpisodeCountCompletedEventHandler(object sender, GetTVEpisodeCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVEpisodeCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVEpisodeCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVEpisodeCountForTVShowCompletedEventHandler(object sender, GetTVEpisodeCountForTVShowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVEpisodeCountForTVShowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVEpisodeCountForTVShowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVEpisodeCountForSeasonCompletedEventHandler(object sender, GetTVEpisodeCountForSeasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVEpisodeCountForSeasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVEpisodeCountForSeasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVShowCountCompletedEventHandler(object sender, GetTVShowCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVShowCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVShowCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVSeasonCountForTVShowCompletedEventHandler(object sender, GetTVSeasonCountForTVShowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVSeasonCountForTVShowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVSeasonCountForTVShowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllTVShowsBasicCompletedEventHandler(object sender, GetAllTVShowsBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTVShowsBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTVShowsBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVShowBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVShowBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllTVShowsDetailedCompletedEventHandler(object sender, GetAllTVShowsDetailedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTVShowsDetailedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTVShowsDetailedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVShowDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVShowDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVShowsBasicByRangeCompletedEventHandler(object sender, GetTVShowsBasicByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVShowsBasicByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVShowsBasicByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVShowBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVShowBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVShowsDetailedByRangeCompletedEventHandler(object sender, GetTVShowsDetailedByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVShowsDetailedByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVShowsDetailedByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVShowDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVShowDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVShowBasicByIdCompletedEventHandler(object sender, GetTVShowBasicByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVShowBasicByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVShowBasicByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVShowBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVShowBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVShowDetailedByIdCompletedEventHandler(object sender, GetTVShowDetailedByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVShowDetailedByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVShowDetailedByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVShowDetailed Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVShowDetailed)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVSeasonsBasicForTVShowCompletedEventHandler(object sender, GetTVSeasonsBasicForTVShowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVSeasonsBasicForTVShowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVSeasonsBasicForTVShowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVSeasonBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVSeasonBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVSeasonsDetailedForTVShowCompletedEventHandler(object sender, GetTVSeasonsDetailedForTVShowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVSeasonsDetailedForTVShowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVSeasonsDetailedForTVShowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVSeasonDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVSeasonDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVSeasonBasicByIdCompletedEventHandler(object sender, GetTVSeasonBasicByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVSeasonBasicByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVSeasonBasicByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVSeasonBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVSeasonBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVSeasonDetailedByIdCompletedEventHandler(object sender, GetTVSeasonDetailedByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVSeasonDetailedByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVSeasonDetailedByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVSeasonDetailed Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVSeasonDetailed)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllTVEpisodesBasicCompletedEventHandler(object sender, GetAllTVEpisodesBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTVEpisodesBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTVEpisodesBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVEpisodeBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVEpisodeBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllTVEpisodesDetailedCompletedEventHandler(object sender, GetAllTVEpisodesDetailedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTVEpisodesDetailedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTVEpisodesDetailedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVEpisodeDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVEpisodeDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVEpisodesBasicByRangeCompletedEventHandler(object sender, GetTVEpisodesBasicByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVEpisodesBasicByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVEpisodesBasicByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVEpisodeBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVEpisodeBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVEpisodesDetailedByRangeCompletedEventHandler(object sender, GetTVEpisodesDetailedByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVEpisodesDetailedByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVEpisodesDetailedByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVEpisodeDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVEpisodeDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVEpisodesBasicForTVShowCompletedEventHandler(object sender, GetTVEpisodesBasicForTVShowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVEpisodesBasicForTVShowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVEpisodesBasicForTVShowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVEpisodeBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVEpisodeBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVEpisodesDetailedForTVShowCompletedEventHandler(object sender, GetTVEpisodesDetailedForTVShowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVEpisodesDetailedForTVShowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVEpisodesDetailedForTVShowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVEpisodeDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVEpisodeDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTVEpisodesBasicForTVShowByRangeCompletedEventHandler(object sender, GetTVEpisodesBasicForTVShowByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTVEpisodesBasicForTVShowByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTVEpisodesBasicForTVShowByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebTVEpisodeBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebTVEpisodeBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllMusicArtistsBasicCompletedEventHandler(object sender, GetAllMusicArtistsBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMusicArtistsBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMusicArtistsBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicArtistBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicArtistBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicArtistsBasicByRangeCompletedEventHandler(object sender, GetMusicArtistsBasicByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicArtistsBasicByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicArtistsBasicByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicArtistBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicArtistBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicArtistBasicByIdCompletedEventHandler(object sender, GetMusicArtistBasicByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicArtistBasicByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicArtistBasicByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicArtistBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicArtistBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllMusicArtistsDetailedCompletedEventHandler(object sender, GetAllMusicArtistsDetailedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMusicArtistsDetailedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMusicArtistsDetailedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicArtistDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicArtistDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicArtistsDetailedByRangeCompletedEventHandler(object sender, GetMusicArtistsDetailedByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicArtistsDetailedByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicArtistsDetailedByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicArtistDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicArtistDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicArtistDetailedByIdCompletedEventHandler(object sender, GetMusicArtistDetailedByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicArtistDetailedByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicArtistDetailedByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicArtistDetailed Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicArtistDetailed)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicTrackCountCompletedEventHandler(object sender, GetMusicTrackCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicTrackCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicTrackCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllMusicTracksBasicCompletedEventHandler(object sender, GetAllMusicTracksBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMusicTracksBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMusicTracksBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicTrackBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicTrackBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllMusicTracksDetailedCompletedEventHandler(object sender, GetAllMusicTracksDetailedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMusicTracksDetailedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMusicTracksDetailedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicTrackDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicTrackDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicTracksBasicByRangeCompletedEventHandler(object sender, GetMusicTracksBasicByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicTracksBasicByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicTracksBasicByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicTrackBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicTrackBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicTracksDetailedByRangeCompletedEventHandler(object sender, GetMusicTracksDetailedByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicTracksDetailedByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicTracksDetailedByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicTrackDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicTrackDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicTracksBasicForAlbumCompletedEventHandler(object sender, GetMusicTracksBasicForAlbumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicTracksBasicForAlbumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicTracksBasicForAlbumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicTrackBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicTrackBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicTracksDetailedForAlbumCompletedEventHandler(object sender, GetMusicTracksDetailedForAlbumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicTracksDetailedForAlbumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicTracksDetailedForAlbumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicTrackDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicTrackDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicTrackBasicByIdCompletedEventHandler(object sender, GetMusicTrackBasicByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicTrackBasicByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicTrackBasicByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicTrackBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicTrackBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicTrackDetailedByIdCompletedEventHandler(object sender, GetMusicTrackDetailedByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicTrackDetailedByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicTrackDetailedByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicTrackDetailed Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicTrackDetailed)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllMusicGenresCompletedEventHandler(object sender, GetAllMusicGenresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMusicGenresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMusicGenresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebGenre[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebGenre[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicGenresByRangeCompletedEventHandler(object sender, GetMusicGenresByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicGenresByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicGenresByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebGenre[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebGenre[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicGenresCountCompletedEventHandler(object sender, GetMusicGenresCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicGenresCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicGenresCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllMusicCategoriesCompletedEventHandler(object sender, GetAllMusicCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMusicCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMusicCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebCategory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPictureCountCompletedEventHandler(object sender, GetPictureCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPictureCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPictureCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllPicturesBasicCompletedEventHandler(object sender, GetAllPicturesBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPicturesBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPicturesBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebPictureBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebPictureBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllPicturesDetailedCompletedEventHandler(object sender, GetAllPicturesDetailedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPicturesDetailedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPicturesDetailedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebPictureDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebPictureDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPictureBasicByIdCompletedEventHandler(object sender, GetPictureBasicByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPictureBasicByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPictureBasicByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebPictureBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebPictureBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPictureDetailedByIdCompletedEventHandler(object sender, GetPictureDetailedByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPictureDetailedByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPictureDetailedByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebPictureDetailed Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebPictureDetailed)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllPictureCategoriesCompletedEventHandler(object sender, GetAllPictureCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPictureCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPictureCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebCategory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServiceDescriptionCompletedEventHandler(object sender, GetServiceDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMediaServiceDescription Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMediaServiceDescription)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMediaItemCompletedEventHandler(object sender, GetMediaItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediaItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediaItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMediaItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMediaItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchCompletedEventHandler(object sender, SearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebSearchResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebSearchResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchResultsByRangeCompletedEventHandler(object sender, SearchResultsByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchResultsByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchResultsByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebSearchResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebSearchResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetExternalMediaInfoCompletedEventHandler(object sender, GetExternalMediaInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExternalMediaInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExternalMediaInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SerializableDictionaryOfstring Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SerializableDictionaryOfstring)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMovieCountCompletedEventHandler(object sender, GetMovieCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMovieCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMovieCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllMoviesBasicCompletedEventHandler(object sender, GetAllMoviesBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMoviesBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMoviesBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMovieBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMovieBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllMoviesDetailedCompletedEventHandler(object sender, GetAllMoviesDetailedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMoviesDetailedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMoviesDetailedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMovieDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMovieDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMoviesBasicByRangeCompletedEventHandler(object sender, GetMoviesBasicByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMoviesBasicByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMoviesBasicByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMovieBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMovieBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMoviesDetailedByRangeCompletedEventHandler(object sender, GetMoviesDetailedByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMoviesDetailedByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMoviesDetailedByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMovieDetailed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMovieDetailed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMovieBasicByIdCompletedEventHandler(object sender, GetMovieBasicByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMovieBasicByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMovieBasicByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMovieBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMovieBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMovieDetailedByIdCompletedEventHandler(object sender, GetMovieDetailedByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMovieDetailedByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMovieDetailedByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMovieDetailed Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMovieDetailed)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllMovieGenresCompletedEventHandler(object sender, GetAllMovieGenresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMovieGenresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMovieGenresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebGenre[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebGenre[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMovieGenresByRangeCompletedEventHandler(object sender, GetMovieGenresByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMovieGenresByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMovieGenresByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebGenre[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebGenre[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMovieGenresCountCompletedEventHandler(object sender, GetMovieGenresCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMovieGenresCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMovieGenresCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllMovieCategoriesCompletedEventHandler(object sender, GetAllMovieCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMovieCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMovieCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebCategory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllMovieActorsCompletedEventHandler(object sender, GetAllMovieActorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMovieActorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMovieActorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebActor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebActor[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMovieActorsByRangeCompletedEventHandler(object sender, GetMovieActorsByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMovieActorsByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMovieActorsByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebActor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebActor[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMovieActorCountCompletedEventHandler(object sender, GetMovieActorCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMovieActorCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMovieActorCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicAlbumCountCompletedEventHandler(object sender, GetMusicAlbumCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicAlbumCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicAlbumCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllMusicAlbumsBasicCompletedEventHandler(object sender, GetAllMusicAlbumsBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMusicAlbumsBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMusicAlbumsBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicAlbumBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicAlbumBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicAlbumsBasicByRangeCompletedEventHandler(object sender, GetMusicAlbumsBasicByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicAlbumsBasicByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicAlbumsBasicByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicAlbumBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicAlbumBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicAlbumsBasicForArtistCompletedEventHandler(object sender, GetMusicAlbumsBasicForArtistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicAlbumsBasicForArtistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicAlbumsBasicForArtistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicAlbumBasic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicAlbumBasic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicAlbumBasicByIdCompletedEventHandler(object sender, GetMusicAlbumBasicByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicAlbumBasicByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicAlbumBasicByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebMusicAlbumBasic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebMusicAlbumBasic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMusicArtistCountCompletedEventHandler(object sender, GetMusicArtistCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMusicArtistCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMusicArtistCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebItemCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebItemCount)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591